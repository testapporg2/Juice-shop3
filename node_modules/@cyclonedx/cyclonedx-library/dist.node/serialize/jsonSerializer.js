"use strict";
/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonSerializer = void 0;
const enums_1 = require("../spec/enums");
const errors_1 = require("../spec/errors");
const baseSerializer_1 = require("./baseSerializer");
class JsonSerializer extends baseSerializer_1.BaseSerializer {
    #normalizerFactory;
    constructor(normalizerFactory) {
        if (!normalizerFactory.spec.supportsFormat(enums_1.Format.JSON)) {
            throw new errors_1.UnsupportedFormatError('Spec does not support JSON format.');
        }
        super();
        this.#normalizerFactory = normalizerFactory;
    }
    get normalizerFactory() {
        return this.#normalizerFactory;
    }
    _normalize(bom, options = {}) {
        return this.#normalizerFactory.makeForBom()
            .normalize(bom, options);
    }
    _serialize(bom, { space } = {}) {
        return JSON.stringify(bom, null, space);
    }
}
exports.JsonSerializer = JsonSerializer;
//# sourceMappingURL=jsonSerializer.js.map