"use strict";
/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bom = void 0;
const integer_1 = require("../types/integer");
const component_1 = require("./component");
const metadata_1 = require("./metadata");
const service_1 = require("./service");
const vulnerability_1 = require("./vulnerability/vulnerability");
class Bom {
    metadata;
    components;
    services;
    vulnerabilities;
    #version = 1;
    #serialNumber;
    constructor(op = {}) {
        this.metadata = op.metadata ?? new metadata_1.Metadata();
        this.components = op.components ?? new component_1.ComponentRepository();
        this.services = op.services ?? new service_1.ServiceRepository();
        this.version = op.version ?? this.version;
        this.vulnerabilities = op.vulnerabilities ?? new vulnerability_1.VulnerabilityRepository();
        this.serialNumber = op.serialNumber;
    }
    get version() {
        return this.#version;
    }
    set version(value) {
        if (!(0, integer_1.isPositiveInteger)(value)) {
            throw new TypeError('Not PositiveInteger');
        }
        this.#version = value;
    }
    get serialNumber() {
        return this.#serialNumber;
    }
    set serialNumber(value) {
        this.#serialNumber = value === ''
            ? undefined
            : value;
    }
}
exports.Bom = Bom;
//# sourceMappingURL=bom.js.map