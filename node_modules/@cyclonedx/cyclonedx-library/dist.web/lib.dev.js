(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["CycloneDX_library"] = factory();
	else
		root["CycloneDX_library"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./res/schema/spdx.SNAPSHOT.schema.json":
/*!**********************************************!*\
  !*** ./res/schema/spdx.SNAPSHOT.schema.json ***!
  \**********************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"http://cyclonedx.org/schema/spdx.schema.json","$comment":"v1.0-3.26.0","type":"string","enum":["0BSD","3D-Slicer-1.0","AAL","Abstyles","AdaCore-doc","Adobe-2006","Adobe-Display-PostScript","Adobe-Glyph","Adobe-Utopia","ADSL","AFL-1.1","AFL-1.2","AFL-2.0","AFL-2.1","AFL-3.0","Afmparse","AGPL-1.0","AGPL-1.0-only","AGPL-1.0-or-later","AGPL-3.0","AGPL-3.0-only","AGPL-3.0-or-later","Aladdin","AMD-newlib","AMDPLPA","AML","AML-glslang","AMPAS","ANTLR-PD","ANTLR-PD-fallback","any-OSI","any-OSI-perl-modules","Apache-1.0","Apache-1.1","Apache-2.0","APAFML","APL-1.0","App-s2p","APSL-1.0","APSL-1.1","APSL-1.2","APSL-2.0","Arphic-1999","Artistic-1.0","Artistic-1.0-cl8","Artistic-1.0-Perl","Artistic-2.0","ASWF-Digital-Assets-1.0","ASWF-Digital-Assets-1.1","Baekmuk","Bahyph","Barr","bcrypt-Solar-Designer","Beerware","Bitstream-Charter","Bitstream-Vera","BitTorrent-1.0","BitTorrent-1.1","blessing","BlueOak-1.0.0","Boehm-GC","Boehm-GC-without-fee","Borceux","Brian-Gladman-2-Clause","Brian-Gladman-3-Clause","BSD-1-Clause","BSD-2-Clause","BSD-2-Clause-Darwin","BSD-2-Clause-first-lines","BSD-2-Clause-FreeBSD","BSD-2-Clause-NetBSD","BSD-2-Clause-Patent","BSD-2-Clause-Views","BSD-3-Clause","BSD-3-Clause-acpica","BSD-3-Clause-Attribution","BSD-3-Clause-Clear","BSD-3-Clause-flex","BSD-3-Clause-HP","BSD-3-Clause-LBNL","BSD-3-Clause-Modification","BSD-3-Clause-No-Military-License","BSD-3-Clause-No-Nuclear-License","BSD-3-Clause-No-Nuclear-License-2014","BSD-3-Clause-No-Nuclear-Warranty","BSD-3-Clause-Open-MPI","BSD-3-Clause-Sun","BSD-4-Clause","BSD-4-Clause-Shortened","BSD-4-Clause-UC","BSD-4.3RENO","BSD-4.3TAHOE","BSD-Advertising-Acknowledgement","BSD-Attribution-HPND-disclaimer","BSD-Inferno-Nettverk","BSD-Protection","BSD-Source-beginning-file","BSD-Source-Code","BSD-Systemics","BSD-Systemics-W3Works","BSL-1.0","BUSL-1.1","bzip2-1.0.5","bzip2-1.0.6","C-UDA-1.0","CAL-1.0","CAL-1.0-Combined-Work-Exception","Caldera","Caldera-no-preamble","Catharon","CATOSL-1.1","CC-BY-1.0","CC-BY-2.0","CC-BY-2.5","CC-BY-2.5-AU","CC-BY-3.0","CC-BY-3.0-AT","CC-BY-3.0-AU","CC-BY-3.0-DE","CC-BY-3.0-IGO","CC-BY-3.0-NL","CC-BY-3.0-US","CC-BY-4.0","CC-BY-NC-1.0","CC-BY-NC-2.0","CC-BY-NC-2.5","CC-BY-NC-3.0","CC-BY-NC-3.0-DE","CC-BY-NC-4.0","CC-BY-NC-ND-1.0","CC-BY-NC-ND-2.0","CC-BY-NC-ND-2.5","CC-BY-NC-ND-3.0","CC-BY-NC-ND-3.0-DE","CC-BY-NC-ND-3.0-IGO","CC-BY-NC-ND-4.0","CC-BY-NC-SA-1.0","CC-BY-NC-SA-2.0","CC-BY-NC-SA-2.0-DE","CC-BY-NC-SA-2.0-FR","CC-BY-NC-SA-2.0-UK","CC-BY-NC-SA-2.5","CC-BY-NC-SA-3.0","CC-BY-NC-SA-3.0-DE","CC-BY-NC-SA-3.0-IGO","CC-BY-NC-SA-4.0","CC-BY-ND-1.0","CC-BY-ND-2.0","CC-BY-ND-2.5","CC-BY-ND-3.0","CC-BY-ND-3.0-DE","CC-BY-ND-4.0","CC-BY-SA-1.0","CC-BY-SA-2.0","CC-BY-SA-2.0-UK","CC-BY-SA-2.1-JP","CC-BY-SA-2.5","CC-BY-SA-3.0","CC-BY-SA-3.0-AT","CC-BY-SA-3.0-DE","CC-BY-SA-3.0-IGO","CC-BY-SA-4.0","CC-PDDC","CC-PDM-1.0","CC-SA-1.0","CC0-1.0","CDDL-1.0","CDDL-1.1","CDL-1.0","CDLA-Permissive-1.0","CDLA-Permissive-2.0","CDLA-Sharing-1.0","CECILL-1.0","CECILL-1.1","CECILL-2.0","CECILL-2.1","CECILL-B","CECILL-C","CERN-OHL-1.1","CERN-OHL-1.2","CERN-OHL-P-2.0","CERN-OHL-S-2.0","CERN-OHL-W-2.0","CFITSIO","check-cvs","checkmk","ClArtistic","Clips","CMU-Mach","CMU-Mach-nodoc","CNRI-Jython","CNRI-Python","CNRI-Python-GPL-Compatible","COIL-1.0","Community-Spec-1.0","Condor-1.1","copyleft-next-0.3.0","copyleft-next-0.3.1","Cornell-Lossless-JPEG","CPAL-1.0","CPL-1.0","CPOL-1.02","Cronyx","Crossword","CrystalStacker","CUA-OPL-1.0","Cube","curl","cve-tou","D-FSL-1.0","DEC-3-Clause","diffmark","DL-DE-BY-2.0","DL-DE-ZERO-2.0","DOC","DocBook-Schema","DocBook-Stylesheet","DocBook-XML","Dotseqn","DRL-1.0","DRL-1.1","DSDP","dtoa","dvipdfm","ECL-1.0","ECL-2.0","eCos-2.0","EFL-1.0","EFL-2.0","eGenix","Elastic-2.0","Entessa","EPICS","EPL-1.0","EPL-2.0","ErlPL-1.1","etalab-2.0","EUDatagrid","EUPL-1.0","EUPL-1.1","EUPL-1.2","Eurosym","Fair","FBM","FDK-AAC","Ferguson-Twofish","Frameworx-1.0","FreeBSD-DOC","FreeImage","FSFAP","FSFAP-no-warranty-disclaimer","FSFUL","FSFULLR","FSFULLRWD","FTL","Furuseth","fwlw","GCR-docs","GD","generic-xts","GFDL-1.1","GFDL-1.1-invariants-only","GFDL-1.1-invariants-or-later","GFDL-1.1-no-invariants-only","GFDL-1.1-no-invariants-or-later","GFDL-1.1-only","GFDL-1.1-or-later","GFDL-1.2","GFDL-1.2-invariants-only","GFDL-1.2-invariants-or-later","GFDL-1.2-no-invariants-only","GFDL-1.2-no-invariants-or-later","GFDL-1.2-only","GFDL-1.2-or-later","GFDL-1.3","GFDL-1.3-invariants-only","GFDL-1.3-invariants-or-later","GFDL-1.3-no-invariants-only","GFDL-1.3-no-invariants-or-later","GFDL-1.3-only","GFDL-1.3-or-later","Giftware","GL2PS","Glide","Glulxe","GLWTPL","gnuplot","GPL-1.0","GPL-1.0+","GPL-1.0-only","GPL-1.0-or-later","GPL-2.0","GPL-2.0+","GPL-2.0-only","GPL-2.0-or-later","GPL-2.0-with-autoconf-exception","GPL-2.0-with-bison-exception","GPL-2.0-with-classpath-exception","GPL-2.0-with-font-exception","GPL-2.0-with-GCC-exception","GPL-3.0","GPL-3.0+","GPL-3.0-only","GPL-3.0-or-later","GPL-3.0-with-autoconf-exception","GPL-3.0-with-GCC-exception","Graphics-Gems","gSOAP-1.3b","gtkbook","Gutmann","HaskellReport","hdparm","HIDAPI","Hippocratic-2.1","HP-1986","HP-1989","HPND","HPND-DEC","HPND-doc","HPND-doc-sell","HPND-export-US","HPND-export-US-acknowledgement","HPND-export-US-modify","HPND-export2-US","HPND-Fenneberg-Livingston","HPND-INRIA-IMAG","HPND-Intel","HPND-Kevlin-Henney","HPND-Markus-Kuhn","HPND-merchantability-variant","HPND-MIT-disclaimer","HPND-Netrek","HPND-Pbmplus","HPND-sell-MIT-disclaimer-xserver","HPND-sell-regexpr","HPND-sell-variant","HPND-sell-variant-MIT-disclaimer","HPND-sell-variant-MIT-disclaimer-rev","HPND-UC","HPND-UC-export-US","HTMLTIDY","IBM-pibs","ICU","IEC-Code-Components-EULA","IJG","IJG-short","ImageMagick","iMatix","Imlib2","Info-ZIP","Inner-Net-2.0","InnoSetup","Intel","Intel-ACPI","Interbase-1.0","IPA","IPL-1.0","ISC","ISC-Veillard","Jam","JasPer-2.0","JPL-image","JPNIC","JSON","Kastrup","Kazlib","Knuth-CTAN","LAL-1.2","LAL-1.3","Latex2e","Latex2e-translated-notice","Leptonica","LGPL-2.0","LGPL-2.0+","LGPL-2.0-only","LGPL-2.0-or-later","LGPL-2.1","LGPL-2.1+","LGPL-2.1-only","LGPL-2.1-or-later","LGPL-3.0","LGPL-3.0+","LGPL-3.0-only","LGPL-3.0-or-later","LGPLLR","Libpng","libpng-2.0","libselinux-1.0","libtiff","libutil-David-Nugent","LiLiQ-P-1.1","LiLiQ-R-1.1","LiLiQ-Rplus-1.1","Linux-man-pages-1-para","Linux-man-pages-copyleft","Linux-man-pages-copyleft-2-para","Linux-man-pages-copyleft-var","Linux-OpenIB","LOOP","LPD-document","LPL-1.0","LPL-1.02","LPPL-1.0","LPPL-1.1","LPPL-1.2","LPPL-1.3a","LPPL-1.3c","lsof","Lucida-Bitmap-Fonts","LZMA-SDK-9.11-to-9.20","LZMA-SDK-9.22","Mackerras-3-Clause","Mackerras-3-Clause-acknowledgment","magaz","mailprio","MakeIndex","Martin-Birgmeier","McPhee-slideshow","metamail","Minpack","MIPS","MirOS","MIT","MIT-0","MIT-advertising","MIT-Click","MIT-CMU","MIT-enna","MIT-feh","MIT-Festival","MIT-Khronos-old","MIT-Modern-Variant","MIT-open-group","MIT-testregex","MIT-Wu","MITNFA","MMIXware","Motosoto","MPEG-SSG","mpi-permissive","mpich2","MPL-1.0","MPL-1.1","MPL-2.0","MPL-2.0-no-copyleft-exception","mplus","MS-LPL","MS-PL","MS-RL","MTLL","MulanPSL-1.0","MulanPSL-2.0","Multics","Mup","NAIST-2003","NASA-1.3","Naumen","NBPL-1.0","NCBI-PD","NCGL-UK-2.0","NCL","NCSA","Net-SNMP","NetCDF","Newsletr","NGPL","NICTA-1.0","NIST-PD","NIST-PD-fallback","NIST-Software","NLOD-1.0","NLOD-2.0","NLPL","Nokia","NOSL","Noweb","NPL-1.0","NPL-1.1","NPOSL-3.0","NRL","NTP","NTP-0","Nunit","O-UDA-1.0","OAR","OCCT-PL","OCLC-2.0","ODbL-1.0","ODC-By-1.0","OFFIS","OFL-1.0","OFL-1.0-no-RFN","OFL-1.0-RFN","OFL-1.1","OFL-1.1-no-RFN","OFL-1.1-RFN","OGC-1.0","OGDL-Taiwan-1.0","OGL-Canada-2.0","OGL-UK-1.0","OGL-UK-2.0","OGL-UK-3.0","OGTSL","OLDAP-1.1","OLDAP-1.2","OLDAP-1.3","OLDAP-1.4","OLDAP-2.0","OLDAP-2.0.1","OLDAP-2.1","OLDAP-2.2","OLDAP-2.2.1","OLDAP-2.2.2","OLDAP-2.3","OLDAP-2.4","OLDAP-2.5","OLDAP-2.6","OLDAP-2.7","OLDAP-2.8","OLFL-1.3","OML","OpenPBS-2.3","OpenSSL","OpenSSL-standalone","OpenVision","OPL-1.0","OPL-UK-3.0","OPUBL-1.0","OSET-PL-2.1","OSL-1.0","OSL-1.1","OSL-2.0","OSL-2.1","OSL-3.0","PADL","Parity-6.0.0","Parity-7.0.0","PDDL-1.0","PHP-3.0","PHP-3.01","Pixar","pkgconf","Plexus","pnmstitch","PolyForm-Noncommercial-1.0.0","PolyForm-Small-Business-1.0.0","PostgreSQL","PPL","PSF-2.0","psfrag","psutils","Python-2.0","Python-2.0.1","python-ldap","Qhull","QPL-1.0","QPL-1.0-INRIA-2004","radvd","Rdisc","RHeCos-1.1","RPL-1.1","RPL-1.5","RPSL-1.0","RSA-MD","RSCPL","Ruby","Ruby-pty","SAX-PD","SAX-PD-2.0","Saxpath","SCEA","SchemeReport","Sendmail","Sendmail-8.23","Sendmail-Open-Source-1.1","SGI-B-1.0","SGI-B-1.1","SGI-B-2.0","SGI-OpenGL","SGP4","SHL-0.5","SHL-0.51","SimPL-2.0","SISSL","SISSL-1.2","SL","Sleepycat","SMAIL-GPL","SMLNJ","SMPPL","SNIA","snprintf","softSurfer","Soundex","Spencer-86","Spencer-94","Spencer-99","SPL-1.0","ssh-keyscan","SSH-OpenSSH","SSH-short","SSLeay-standalone","SSPL-1.0","StandardML-NJ","SugarCRM-1.1.3","Sun-PPP","Sun-PPP-2000","SunPro","SWL","swrule","Symlinks","TAPR-OHL-1.0","TCL","TCP-wrappers","TermReadKey","TGPPL-1.0","ThirdEye","threeparttable","TMate","TORQUE-1.1","TOSL","TPDL","TPL-1.0","TrustedQSL","TTWL","TTYP0","TU-Berlin-1.0","TU-Berlin-2.0","Ubuntu-font-1.0","UCAR","UCL-1.0","ulem","UMich-Merit","Unicode-3.0","Unicode-DFS-2015","Unicode-DFS-2016","Unicode-TOU","UnixCrypt","Unlicense","UPL-1.0","URT-RLE","Vim","VOSTROM","VSL-1.0","W3C","W3C-19980720","W3C-20150513","w3m","Watcom-1.0","Widget-Workshop","Wsuipa","WTFPL","wwl","wxWindows","X11","X11-distribute-modifications-variant","X11-swapped","Xdebug-1.03","Xerox","Xfig","XFree86-1.1","xinetd","xkeyboard-config-Zinoviev","xlock","Xnet","xpp","XSkat","xzoom","YPL-1.0","YPL-1.1","Zed","Zeeff","Zend-2.0","Zimbra-1.3","Zimbra-1.4","Zlib","zlib-acknowledgement","ZPL-1.1","ZPL-2.0","ZPL-2.1","389-exception","Asterisk-exception","Asterisk-linking-protocols-exception","Autoconf-exception-2.0","Autoconf-exception-3.0","Autoconf-exception-generic","Autoconf-exception-generic-3.0","Autoconf-exception-macro","Bison-exception-1.24","Bison-exception-2.2","Bootloader-exception","CGAL-linking-exception","Classpath-exception-2.0","CLISP-exception-2.0","cryptsetup-OpenSSL-exception","DigiRule-FOSS-exception","eCos-exception-2.0","erlang-otp-linking-exception","Fawkes-Runtime-exception","FLTK-exception","fmt-exception","Font-exception-2.0","freertos-exception-2.0","GCC-exception-2.0","GCC-exception-2.0-note","GCC-exception-3.1","Gmsh-exception","GNAT-exception","GNOME-examples-exception","GNU-compiler-exception","gnu-javamail-exception","GPL-3.0-389-ds-base-exception","GPL-3.0-interface-exception","GPL-3.0-linking-exception","GPL-3.0-linking-source-exception","GPL-CC-1.0","GStreamer-exception-2005","GStreamer-exception-2008","harbour-exception","i2p-gpl-java-exception","Independent-modules-exception","KiCad-libraries-exception","LGPL-3.0-linking-exception","libpri-OpenH323-exception","Libtool-exception","Linux-syscall-note","LLGPL","LLVM-exception","LZMA-exception","mif-exception","mxml-exception","Nokia-Qt-exception-1.1","OCaml-LGPL-linking-exception","OCCT-exception-1.0","OpenJDK-assembly-exception-1.0","openvpn-openssl-exception","PCRE2-exception","PS-or-PDF-font-exception-20170817","QPL-1.0-INRIA-2004-exception","Qt-GPL-exception-1.0","Qt-LGPL-exception-1.1","Qwt-exception-1.0","romic-exception","RRDtool-FLOSS-exception-2.0","SANE-exception","SHL-2.0","SHL-2.1","stunnel-exception","SWI-exception","Swift-exception","Texinfo-exception","u-boot-exception-2.0","UBDL-exception","Universal-FOSS-exception-1.0","vsftpd-openssl-exception","WxWindows-exception-3.1","x11vnc-openssl-exception"]}');

/***/ }),

/***/ "./src/_helpers/iterable.ts":
/*!**********************************!*\
  !*** ./src/_helpers/iterable.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.chainI = chainI;
function* chainI(...iterables) {
    for (const iterable of iterables) {
        for (const item of iterable) {
            yield item;
        }
    }
}


/***/ }),

/***/ "./src/_helpers/notUndefined.ts":
/*!**************************************!*\
  !*** ./src/_helpers/notUndefined.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isNotUndefined = isNotUndefined;
function isNotUndefined(value) {
    return value !== undefined;
}


/***/ }),

/***/ "./src/_helpers/sortable.ts":
/*!**********************************!*\
  !*** ./src/_helpers/sortable.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SortableNumbers = exports.SortableStringables = exports.SortableComparables = exports.SortableSet = exports.compareObjectsSymbol = void 0;
exports.compareObjectsSymbol = Symbol('internal compare function');
class SortableSet extends Set {
    sorted() {
        return Array.from(this).sort(this[exports.compareObjectsSymbol]);
    }
    compare(other) {
        const sortedOther = other.sorted();
        const sortedSelf = this.sorted();
        if (sortedSelf.length !== sortedOther.length) {
            return sortedSelf.length - sortedOther.length;
        }
        for (let i = sortedSelf.length - 1; i >= 0; --i) {
            const iCompared = this[exports.compareObjectsSymbol](sortedSelf[i], sortedOther[i]);
            if (iCompared !== 0) {
                return iCompared;
            }
        }
        return 0;
    }
}
exports.SortableSet = SortableSet;
class SortableComparables extends SortableSet {
    [exports.compareObjectsSymbol](a, b) {
        if (a.constructor === b.constructor) {
            return a.compare(b);
        }
        return a.constructor.name.localeCompare(b.constructor.name);
    }
}
exports.SortableComparables = SortableComparables;
class SortableStringables extends SortableSet {
    [exports.compareObjectsSymbol](a, b) {
        return a.toString().localeCompare(b.toString());
    }
}
exports.SortableStringables = SortableStringables;
class SortableNumbers extends SortableSet {
    [exports.compareObjectsSymbol](a, b) {
        return a - b;
    }
}
exports.SortableNumbers = SortableNumbers;


/***/ }),

/***/ "./src/_helpers/tree.ts":
/*!******************************!*\
  !*** ./src/_helpers/tree.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.treeIteratorSymbol = void 0;
exports.treeIteratorSymbol = Symbol('iterator of a tree/nesting-like structure');


/***/ }),

/***/ "./src/_helpers/uri.ts":
/*!*****************************!*\
  !*** ./src/_helpers/uri.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.escapeUri = escapeUri;
const _ESCAPES = [
    [/ /g, '%20'],
    [/"/g, '%22'],
    [/'/g, '%27'],
    [/\[/g, '%5B'],
    [/]/g, '%5D'],
    [/</g, '%3C'],
    [/>/g, '%3E'],
    [/\{/g, '%7B'],
    [/}/g, '%7D'],
];
function escapeUri(value) {
    if (value === undefined) {
        return value;
    }
    for (const [s, r] of _ESCAPES) {
        value = value.replace(s, r);
    }
    return value;
}


/***/ }),

/***/ "./src/_optPlug.node/errors.ts":
/*!*************************************!*\
  !*** ./src/_optPlug.node/errors.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OptPlugError = void 0;
class OptPlugError extends Error {
    cause;
    constructor(message, cause) {
        super(message);
        this.cause = cause;
    }
}
exports.OptPlugError = OptPlugError;


/***/ }),

/***/ "./src/enums/attachmentEncoding.ts":
/*!*****************************************!*\
  !*** ./src/enums/attachmentEncoding.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AttachmentEncoding = void 0;
var AttachmentEncoding;
(function (AttachmentEncoding) {
    AttachmentEncoding["Base64"] = "base64";
})(AttachmentEncoding || (exports.AttachmentEncoding = AttachmentEncoding = {}));


/***/ }),

/***/ "./src/enums/componentScope.ts":
/*!*************************************!*\
  !*** ./src/enums/componentScope.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ComponentScope = void 0;
var ComponentScope;
(function (ComponentScope) {
    ComponentScope["Required"] = "required";
    ComponentScope["Optional"] = "optional";
    ComponentScope["Excluded"] = "excluded";
})(ComponentScope || (exports.ComponentScope = ComponentScope = {}));


/***/ }),

/***/ "./src/enums/componentType.ts":
/*!************************************!*\
  !*** ./src/enums/componentType.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ComponentType = void 0;
var ComponentType;
(function (ComponentType) {
    ComponentType["Application"] = "application";
    ComponentType["Framework"] = "framework";
    ComponentType["Library"] = "library";
    ComponentType["Container"] = "container";
    ComponentType["Platform"] = "platform";
    ComponentType["OperatingSystem"] = "operating-system";
    ComponentType["Device"] = "device";
    ComponentType["DeviceDriver"] = "device-driver";
    ComponentType["Firmware"] = "firmware";
    ComponentType["File"] = "file";
    ComponentType["MachineLearningModel"] = "machine-learning-model";
    ComponentType["Data"] = "data";
    ComponentType["CryptographicAsset"] = "cryptographic-asset";
})(ComponentType || (exports.ComponentType = ComponentType = {}));


/***/ }),

/***/ "./src/enums/externalReferenceType.ts":
/*!********************************************!*\
  !*** ./src/enums/externalReferenceType.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExternalReferenceType = void 0;
var ExternalReferenceType;
(function (ExternalReferenceType) {
    ExternalReferenceType["VCS"] = "vcs";
    ExternalReferenceType["IssueTracker"] = "issue-tracker";
    ExternalReferenceType["Website"] = "website";
    ExternalReferenceType["Advisories"] = "advisories";
    ExternalReferenceType["BOM"] = "bom";
    ExternalReferenceType["MailingList"] = "mailing-list";
    ExternalReferenceType["Social"] = "social";
    ExternalReferenceType["Chat"] = "chat";
    ExternalReferenceType["Documentation"] = "documentation";
    ExternalReferenceType["Support"] = "support";
    ExternalReferenceType["SourceDistribution"] = "source-distribution";
    ExternalReferenceType["Distribution"] = "distribution";
    ExternalReferenceType["DistributionIntake"] = "distribution-intake";
    ExternalReferenceType["License"] = "license";
    ExternalReferenceType["BuildMeta"] = "build-meta";
    ExternalReferenceType["BuildSystem"] = "build-system";
    ExternalReferenceType["ReleaseNotes"] = "release-notes";
    ExternalReferenceType["SecurityContact"] = "security-contact";
    ExternalReferenceType["ModelCard"] = "model-card";
    ExternalReferenceType["Log"] = "log";
    ExternalReferenceType["Configuration"] = "configuration";
    ExternalReferenceType["Evidence"] = "evidence";
    ExternalReferenceType["Formulation"] = "formulation";
    ExternalReferenceType["Attestation"] = "attestation";
    ExternalReferenceType["ThreatModel"] = "threat-model";
    ExternalReferenceType["AdversaryModel"] = "adversary-model";
    ExternalReferenceType["RiskAssessment"] = "risk-assessment";
    ExternalReferenceType["VulnerabilityAssertion"] = "vulnerability-assertion";
    ExternalReferenceType["ExploitabilityStatement"] = "exploitability-statement";
    ExternalReferenceType["PentestReport"] = "pentest-report";
    ExternalReferenceType["StaticAnalysisReport"] = "static-analysis-report";
    ExternalReferenceType["DynamicAnalysisReport"] = "dynamic-analysis-report";
    ExternalReferenceType["RuntimeAnalysisReport"] = "runtime-analysis-report";
    ExternalReferenceType["ComponentAnalysisReport"] = "component-analysis-report";
    ExternalReferenceType["MaturityReport"] = "maturity-report";
    ExternalReferenceType["CertificationReport"] = "certification-report";
    ExternalReferenceType["CodifiedInfrastructure"] = "codified-infrastructure";
    ExternalReferenceType["QualityMetrics"] = "quality-metrics";
    ExternalReferenceType["POAM"] = "poam";
    ExternalReferenceType["ElectronicSignature"] = "electronic-signature";
    ExternalReferenceType["DigitalSignature"] = "digital-signature";
    ExternalReferenceType["RFC9116"] = "rfc-9116";
    ExternalReferenceType["Other"] = "other";
})(ExternalReferenceType || (exports.ExternalReferenceType = ExternalReferenceType = {}));


/***/ }),

/***/ "./src/enums/hashAlogorithm.ts":
/*!*************************************!*\
  !*** ./src/enums/hashAlogorithm.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HashAlgorithm = void 0;
var HashAlgorithm;
(function (HashAlgorithm) {
    HashAlgorithm["MD5"] = "MD5";
    HashAlgorithm["SHA-1"] = "SHA-1";
    HashAlgorithm["SHA-256"] = "SHA-256";
    HashAlgorithm["SHA-384"] = "SHA-384";
    HashAlgorithm["SHA-512"] = "SHA-512";
    HashAlgorithm["SHA3-256"] = "SHA3-256";
    HashAlgorithm["SHA3-384"] = "SHA3-384";
    HashAlgorithm["SHA3-512"] = "SHA3-512";
    HashAlgorithm["BLAKE2b-256"] = "BLAKE2b-256";
    HashAlgorithm["BLAKE2b-384"] = "BLAKE2b-384";
    HashAlgorithm["BLAKE2b-512"] = "BLAKE2b-512";
    HashAlgorithm["BLAKE3"] = "BLAKE3";
})(HashAlgorithm || (exports.HashAlgorithm = HashAlgorithm = {}));


/***/ }),

/***/ "./src/enums/index.ts":
/*!****************************!*\
  !*** ./src/enums/index.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Vulnerability = void 0;
__exportStar(__webpack_require__(/*! ./attachmentEncoding */ "./src/enums/attachmentEncoding.ts"), exports);
__exportStar(__webpack_require__(/*! ./componentScope */ "./src/enums/componentScope.ts"), exports);
__exportStar(__webpack_require__(/*! ./componentType */ "./src/enums/componentType.ts"), exports);
__exportStar(__webpack_require__(/*! ./externalReferenceType */ "./src/enums/externalReferenceType.ts"), exports);
__exportStar(__webpack_require__(/*! ./hashAlogorithm */ "./src/enums/hashAlogorithm.ts"), exports);
__exportStar(__webpack_require__(/*! ./licenseAcknowledgement */ "./src/enums/licenseAcknowledgement.ts"), exports);
__exportStar(__webpack_require__(/*! ./lifecyclePhase */ "./src/enums/lifecyclePhase.ts"), exports);
exports.Vulnerability = __importStar(__webpack_require__(/*! ./vulnerability */ "./src/enums/vulnerability/index.ts"));


/***/ }),

/***/ "./src/enums/licenseAcknowledgement.ts":
/*!*********************************************!*\
  !*** ./src/enums/licenseAcknowledgement.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LicenseAcknowledgement = void 0;
var LicenseAcknowledgement;
(function (LicenseAcknowledgement) {
    LicenseAcknowledgement["Declared"] = "declared";
    LicenseAcknowledgement["Concluded"] = "concluded";
})(LicenseAcknowledgement || (exports.LicenseAcknowledgement = LicenseAcknowledgement = {}));


/***/ }),

/***/ "./src/enums/lifecyclePhase.ts":
/*!*************************************!*\
  !*** ./src/enums/lifecyclePhase.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LifecyclePhase = void 0;
var LifecyclePhase;
(function (LifecyclePhase) {
    LifecyclePhase["Design"] = "design";
    LifecyclePhase["PreBuild"] = "pre-build";
    LifecyclePhase["Build"] = "build";
    LifecyclePhase["PostBuild"] = "post-build";
    LifecyclePhase["Operations"] = "operations";
    LifecyclePhase["Discovery"] = "discovery";
    LifecyclePhase["Decommission"] = "decommission";
})(LifecyclePhase || (exports.LifecyclePhase = LifecyclePhase = {}));


/***/ }),

/***/ "./src/enums/vulnerability/affectStatus.ts":
/*!*************************************************!*\
  !*** ./src/enums/vulnerability/affectStatus.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AffectStatus = void 0;
var AffectStatus;
(function (AffectStatus) {
    AffectStatus["Affected"] = "affected";
    AffectStatus["Unaffected"] = "unaffected";
    AffectStatus["Unknown"] = "unknown";
})(AffectStatus || (exports.AffectStatus = AffectStatus = {}));


/***/ }),

/***/ "./src/enums/vulnerability/analysisJustification.ts":
/*!**********************************************************!*\
  !*** ./src/enums/vulnerability/analysisJustification.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AnalysisJustification = void 0;
var AnalysisJustification;
(function (AnalysisJustification) {
    AnalysisJustification["CodeNotPresent"] = "code_not_present";
    AnalysisJustification["CodeNotReachable"] = "code_not_reachable";
    AnalysisJustification["RequiresConfiguration"] = "requires_configuration";
    AnalysisJustification["RequiresDependency"] = "requires_dependency";
    AnalysisJustification["RequiresEnvironment"] = "requires_environment";
    AnalysisJustification["ProtectedByCompiler"] = "protected_by_compiler";
    AnalysisJustification["ProtectedAtRuntime"] = "protected_at_runtime";
    AnalysisJustification["ProtectedAtPerimeter"] = "protected_at_perimeter";
    AnalysisJustification["ProtectedByMitigatingControl"] = "protected_by_mitigating_control";
})(AnalysisJustification || (exports.AnalysisJustification = AnalysisJustification = {}));


/***/ }),

/***/ "./src/enums/vulnerability/analysisResponse.ts":
/*!*****************************************************!*\
  !*** ./src/enums/vulnerability/analysisResponse.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AnalysisResponseRepository = exports.AnalysisResponse = void 0;
const sortable_1 = __webpack_require__(/*! ../../_helpers/sortable */ "./src/_helpers/sortable.ts");
var AnalysisResponse;
(function (AnalysisResponse) {
    AnalysisResponse["CanNotFix"] = "can_not_fix";
    AnalysisResponse["WillNotFix"] = "will_not_fix";
    AnalysisResponse["Update"] = "update";
    AnalysisResponse["Rollback"] = "rollback";
    AnalysisResponse["WorkaroundAvailable"] = "workaround_available";
})(AnalysisResponse || (exports.AnalysisResponse = AnalysisResponse = {}));
class AnalysisResponseRepository extends sortable_1.SortableStringables {
}
exports.AnalysisResponseRepository = AnalysisResponseRepository;


/***/ }),

/***/ "./src/enums/vulnerability/analysisState.ts":
/*!**************************************************!*\
  !*** ./src/enums/vulnerability/analysisState.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AnalysisState = void 0;
var AnalysisState;
(function (AnalysisState) {
    AnalysisState["Resolved"] = "resolved";
    AnalysisState["ResolvedWithPedigree"] = "resolved_with_pedigree";
    AnalysisState["Exploitable"] = "exploitable";
    AnalysisState["InTriage"] = "in_triage";
    AnalysisState["FalsePositive"] = "false_positive";
    AnalysisState["NotAffected"] = "not_affected";
})(AnalysisState || (exports.AnalysisState = AnalysisState = {}));


/***/ }),

/***/ "./src/enums/vulnerability/index.ts":
/*!******************************************!*\
  !*** ./src/enums/vulnerability/index.ts ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./affectStatus */ "./src/enums/vulnerability/affectStatus.ts"), exports);
__exportStar(__webpack_require__(/*! ./analysisJustification */ "./src/enums/vulnerability/analysisJustification.ts"), exports);
__exportStar(__webpack_require__(/*! ./analysisResponse */ "./src/enums/vulnerability/analysisResponse.ts"), exports);
__exportStar(__webpack_require__(/*! ./analysisState */ "./src/enums/vulnerability/analysisState.ts"), exports);
__exportStar(__webpack_require__(/*! ./ratingMethod */ "./src/enums/vulnerability/ratingMethod.ts"), exports);
__exportStar(__webpack_require__(/*! ./severity */ "./src/enums/vulnerability/severity.ts"), exports);


/***/ }),

/***/ "./src/enums/vulnerability/ratingMethod.ts":
/*!*************************************************!*\
  !*** ./src/enums/vulnerability/ratingMethod.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RatingMethod = void 0;
var RatingMethod;
(function (RatingMethod) {
    RatingMethod["CVSSv2"] = "CVSSv2";
    RatingMethod["CVSSv3"] = "CVSSv3";
    RatingMethod["CVSSv31"] = "CVSSv31";
    RatingMethod["CVSSv4"] = "CVSSv4";
    RatingMethod["OWASP"] = "OWASP";
    RatingMethod["SSVC"] = "SSVC";
    RatingMethod["Other"] = "other";
})(RatingMethod || (exports.RatingMethod = RatingMethod = {}));


/***/ }),

/***/ "./src/enums/vulnerability/severity.ts":
/*!*********************************************!*\
  !*** ./src/enums/vulnerability/severity.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Severity = void 0;
var Severity;
(function (Severity) {
    Severity["Critical"] = "critical";
    Severity["High"] = "high";
    Severity["Medium"] = "medium";
    Severity["Low"] = "low";
    Severity["Info"] = "info";
    Severity["None"] = "none";
    Severity["Unknown"] = "unknown";
})(Severity || (exports.Severity = Severity = {}));


/***/ }),

/***/ "./src/factories/index.common.ts":
/*!***************************************!*\
  !*** ./src/factories/index.common.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./license */ "./src/factories/license.ts"), exports);
__exportStar(__webpack_require__(/*! ./packageUrl */ "./src/factories/packageUrl.ts"), exports);


/***/ }),

/***/ "./src/factories/index.web.ts":
/*!************************************!*\
  !*** ./src/factories/index.web.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./index.common */ "./src/factories/index.common.ts"), exports);


/***/ }),

/***/ "./src/factories/license.ts":
/*!**********************************!*\
  !*** ./src/factories/license.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LicenseFactory = void 0;
const license_1 = __webpack_require__(/*! ../models/license */ "./src/models/license.ts");
const spdx_1 = __webpack_require__(/*! ../spdx */ "./src/spdx.ts");
class LicenseFactory {
    makeFromString(value) {
        try {
            return this.makeSpdxLicense(value);
        }
        catch {
        }
        try {
            return this.makeExpression(value);
        }
        catch {
        }
        return this.makeNamedLicense(value);
    }
    makeExpression(value) {
        const expression = String(value);
        if ((0, spdx_1.isValidSpdxLicenseExpression)(expression)) {
            return new license_1.LicenseExpression(expression);
        }
        throw new RangeError('Invalid SPDX license expression');
    }
    makeDisjunctive(value) {
        try {
            return this.makeSpdxLicense(value);
        }
        catch {
            return this.makeNamedLicense(value);
        }
    }
    makeSpdxLicense(value) {
        const fixed = (0, spdx_1.fixupSpdxId)(String(value));
        if (undefined === fixed) {
            throw new RangeError('Unsupported SPDX license ID');
        }
        return new license_1.SpdxLicense(fixed);
    }
    makeNamedLicense(value) {
        return new license_1.NamedLicense(String(value));
    }
}
exports.LicenseFactory = LicenseFactory;


/***/ }),

/***/ "./src/factories/packageUrl.ts":
/*!*************************************!*\
  !*** ./src/factories/packageUrl.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PackageUrlFactory = void 0;
const packageurl_js_1 = __webpack_require__(/*! packageurl-js */ "packageurl-js");
const externalReferenceType_1 = __webpack_require__(/*! ../enums/externalReferenceType */ "./src/enums/externalReferenceType.ts");
class PackageUrlFactory {
    #type;
    constructor(type) {
        this.#type = type;
    }
    get type() {
        return this.#type;
    }
    makeFromComponent(component, sort = false) {
        const qualifiers = {};
        qualifiers.__proto__ = null;
        let subpath = undefined;
        const extRefs = sort
            ? component.externalReferences.sorted()
            : component.externalReferences;
        for (const extRef of extRefs) {
            const url = extRef.url.toString();
            if (url.length <= 0) {
                continue;
            }
            switch (extRef.type) {
                case externalReferenceType_1.ExternalReferenceType.VCS:
                    [qualifiers[packageurl_js_1.PurlQualifierNames.VcsUrl], subpath] = url.split('#', 2);
                    break;
                case externalReferenceType_1.ExternalReferenceType.Distribution:
                    qualifiers[packageurl_js_1.PurlQualifierNames.DownloadUrl] = url;
                    break;
            }
        }
        const hashes = component.hashes;
        if (hashes.size > 0) {
            qualifiers[packageurl_js_1.PurlQualifierNames.Checksum] = Array.from(sort
                ? hashes.sorted()
                : hashes, ([hashAlgo, hashCont]) => `${hashAlgo.toLowerCase()}:${hashCont.toLowerCase()}`).join(',');
        }
        try {
            return new packageurl_js_1.PackageURL(this.#type, component.group, component.name, component.version, qualifiers, subpath);
        }
        catch {
            return undefined;
        }
    }
}
exports.PackageUrlFactory = PackageUrlFactory;


/***/ }),

/***/ "./src/index.common.ts":
/*!*****************************!*\
  !*** ./src/index.common.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Types = exports.Spec = exports.SPDX = exports.Models = exports.Enums = void 0;
exports.Enums = __importStar(__webpack_require__(/*! ./enums */ "./src/enums/index.ts"));
exports.Models = __importStar(__webpack_require__(/*! ./models */ "./src/models/index.ts"));
exports.SPDX = __importStar(__webpack_require__(/*! ./spdx */ "./src/spdx.ts"));
exports.Spec = __importStar(__webpack_require__(/*! ./spec */ "./src/spec/index.ts"));
exports.Types = __importStar(__webpack_require__(/*! ./types */ "./src/types/index.ts"));


/***/ }),

/***/ "./src/index.web.ts":
/*!**************************!*\
  !*** ./src/index.web.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Validation = exports.Utils = exports.Serialize = exports.Factories = void 0;
__exportStar(__webpack_require__(/*! ./index.common */ "./src/index.common.ts"), exports);
exports.Factories = __importStar(__webpack_require__(/*! ./factories/index.web */ "./src/factories/index.web.ts"));
exports.Serialize = __importStar(__webpack_require__(/*! ./serialize/index.web */ "./src/serialize/index.web.ts"));
exports.Utils = __importStar(__webpack_require__(/*! ./utils/index.web */ "./src/utils/index.web.ts"));
exports.Validation = __importStar(__webpack_require__(/*! ./validation/index.web */ "./src/validation/index.web.ts"));


/***/ }),

/***/ "./src/models/attachment.ts":
/*!**********************************!*\
  !*** ./src/models/attachment.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Attachment = void 0;
class Attachment {
    contentType;
    content;
    encoding;
    constructor(content, op = {}) {
        this.contentType = op.contentType;
        this.content = content;
        this.encoding = op.encoding;
    }
}
exports.Attachment = Attachment;


/***/ }),

/***/ "./src/models/bom.ts":
/*!***************************!*\
  !*** ./src/models/bom.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Bom = void 0;
const integer_1 = __webpack_require__(/*! ../types/integer */ "./src/types/integer.ts");
const component_1 = __webpack_require__(/*! ./component */ "./src/models/component.ts");
const metadata_1 = __webpack_require__(/*! ./metadata */ "./src/models/metadata.ts");
const service_1 = __webpack_require__(/*! ./service */ "./src/models/service.ts");
const vulnerability_1 = __webpack_require__(/*! ./vulnerability/vulnerability */ "./src/models/vulnerability/vulnerability.ts");
class Bom {
    metadata;
    components;
    services;
    vulnerabilities;
    #version = 1;
    #serialNumber;
    constructor(op = {}) {
        this.metadata = op.metadata ?? new metadata_1.Metadata();
        this.components = op.components ?? new component_1.ComponentRepository();
        this.services = op.services ?? new service_1.ServiceRepository();
        this.version = op.version ?? this.version;
        this.vulnerabilities = op.vulnerabilities ?? new vulnerability_1.VulnerabilityRepository();
        this.serialNumber = op.serialNumber;
    }
    get version() {
        return this.#version;
    }
    set version(value) {
        if (!(0, integer_1.isPositiveInteger)(value)) {
            throw new TypeError('Not PositiveInteger');
        }
        this.#version = value;
    }
    get serialNumber() {
        return this.#serialNumber;
    }
    set serialNumber(value) {
        this.#serialNumber = value === ''
            ? undefined
            : value;
    }
}
exports.Bom = Bom;


/***/ }),

/***/ "./src/models/bomLink.ts":
/*!*******************************!*\
  !*** ./src/models/bomLink.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BomLinkElement = exports.BomLinkDocument = void 0;
class BomLinkBase {
    #value;
    constructor(value) {
        this.value = value;
    }
    get value() {
        return this.#value;
    }
    set value(value) {
        if (!this._isValid(value)) {
            throw new RangeError('invalid value');
        }
        this.#value = value;
    }
    compare(other) {
        return this.toString().localeCompare(other.toString());
    }
    toString() {
        return this.value;
    }
}
class BomLinkDocument extends BomLinkBase {
    static #pattern = /^urn:cdx:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\/[1-9][0-9]*$/;
    static isValid(value) {
        return typeof value === 'string' &&
            this.#pattern.test(value);
    }
    _isValid(value) {
        return BomLinkDocument.isValid(value);
    }
}
exports.BomLinkDocument = BomLinkDocument;
class BomLinkElement extends BomLinkBase {
    static #pattern = /^urn:cdx:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\/[1-9][0-9]*#.+$/;
    static isValid(value) {
        return typeof value === 'string' &&
            this.#pattern.test(value);
    }
    _isValid(value) {
        return BomLinkElement.isValid(value);
    }
}
exports.BomLinkElement = BomLinkElement;


/***/ }),

/***/ "./src/models/bomRef.ts":
/*!******************************!*\
  !*** ./src/models/bomRef.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BomRefRepository = exports.BomRef = void 0;
class BomRef {
    value;
    constructor(value) {
        this.value = value;
    }
    compare(other) {
        return this.toString().localeCompare(other.toString());
    }
    toString() {
        return this.value ?? '';
    }
}
exports.BomRef = BomRef;
class BomRefRepository extends Set {
}
exports.BomRefRepository = BomRefRepository;


/***/ }),

/***/ "./src/models/component.ts":
/*!*********************************!*\
  !*** ./src/models/component.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ComponentEvidence = exports.ComponentRepository = exports.Component = void 0;
const sortable_1 = __webpack_require__(/*! ../_helpers/sortable */ "./src/_helpers/sortable.ts");
const tree_1 = __webpack_require__(/*! ../_helpers/tree */ "./src/_helpers/tree.ts");
const cpe_1 = __webpack_require__(/*! ../types/cpe */ "./src/types/cpe.ts");
const bomRef_1 = __webpack_require__(/*! ./bomRef */ "./src/models/bomRef.ts");
const copyright_1 = __webpack_require__(/*! ./copyright */ "./src/models/copyright.ts");
const externalReference_1 = __webpack_require__(/*! ./externalReference */ "./src/models/externalReference.ts");
const hash_1 = __webpack_require__(/*! ./hash */ "./src/models/hash.ts");
const license_1 = __webpack_require__(/*! ./license */ "./src/models/license.ts");
const property_1 = __webpack_require__(/*! ./property */ "./src/models/property.ts");
class Component {
    type;
    name;
    author;
    copyright;
    description;
    externalReferences;
    group;
    hashes;
    licenses;
    publisher;
    purl;
    scope;
    supplier;
    swid;
    version;
    components;
    properties;
    evidence;
    #bomRef;
    #cpe;
    dependencies;
    constructor(type, name, op = {}) {
        this.#bomRef = new bomRef_1.BomRef(op.bomRef);
        this.type = type;
        this.name = name;
        this.supplier = op.supplier;
        this.author = op.author;
        this.copyright = op.copyright;
        this.externalReferences = op.externalReferences ?? new externalReference_1.ExternalReferenceRepository();
        this.group = op.group;
        this.hashes = op.hashes ?? new hash_1.HashDictionary();
        this.licenses = op.licenses ?? new license_1.LicenseRepository();
        this.publisher = op.publisher;
        this.purl = op.purl;
        this.scope = op.scope;
        this.swid = op.swid;
        this.version = op.version;
        this.description = op.description;
        this.components = op.components ?? new ComponentRepository();
        this.cpe = op.cpe;
        this.properties = op.properties ?? new property_1.PropertyRepository();
        this.evidence = op.evidence;
        this.dependencies = op.dependencies ?? new bomRef_1.BomRefRepository();
    }
    get bomRef() {
        return this.#bomRef;
    }
    get cpe() {
        return this.#cpe;
    }
    set cpe(value) {
        if (value !== undefined && !(0, cpe_1.isCPE)(value)) {
            throw new TypeError('Not CPE nor undefined');
        }
        this.#cpe = value;
    }
    compare(other) {
        const bomRefCompare = this.bomRef.compare(other.bomRef);
        if (bomRefCompare !== 0) {
            return bomRefCompare;
        }
        if (this.purl !== undefined && other.purl !== undefined) {
            return this.purl.toString().localeCompare(other.purl.toString());
        }
        if (this.#cpe !== undefined && other.#cpe !== undefined) {
            return this.#cpe.localeCompare(other.#cpe);
        }
        return (this.group ?? '').localeCompare(other.group ?? '') ||
            this.name.localeCompare(other.name) ||
            (this.version ?? '').localeCompare(other.version ?? '');
    }
}
exports.Component = Component;
class ComponentRepository extends sortable_1.SortableComparables {
    *[tree_1.treeIteratorSymbol]() {
        for (const component of this) {
            yield component;
            yield* component.components[tree_1.treeIteratorSymbol]();
        }
    }
}
exports.ComponentRepository = ComponentRepository;
class ComponentEvidence {
    licenses;
    copyright;
    constructor(op = {}) {
        this.licenses = op.licenses ?? new license_1.LicenseRepository();
        this.copyright = op.copyright ?? new copyright_1.CopyrightRepository();
    }
}
exports.ComponentEvidence = ComponentEvidence;


/***/ }),

/***/ "./src/models/copyright.ts":
/*!*********************************!*\
  !*** ./src/models/copyright.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CopyrightRepository = void 0;
const sortable_1 = __webpack_require__(/*! ../_helpers/sortable */ "./src/_helpers/sortable.ts");
class CopyrightRepository extends sortable_1.SortableStringables {
}
exports.CopyrightRepository = CopyrightRepository;


/***/ }),

/***/ "./src/models/externalReference.ts":
/*!*****************************************!*\
  !*** ./src/models/externalReference.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExternalReferenceRepository = exports.ExternalReference = void 0;
const sortable_1 = __webpack_require__(/*! ../_helpers/sortable */ "./src/_helpers/sortable.ts");
const hash_1 = __webpack_require__(/*! ./hash */ "./src/models/hash.ts");
class ExternalReference {
    url;
    type;
    hashes;
    comment;
    constructor(url, type, op = {}) {
        this.url = url;
        this.type = type;
        this.hashes = op.hashes ?? new hash_1.HashDictionary();
        this.comment = op.comment;
    }
    compare(other) {
        return this.type.localeCompare(other.type) ||
            this.url.toString().localeCompare(other.url.toString());
    }
}
exports.ExternalReference = ExternalReference;
class ExternalReferenceRepository extends sortable_1.SortableComparables {
}
exports.ExternalReferenceRepository = ExternalReferenceRepository;


/***/ }),

/***/ "./src/models/hash.ts":
/*!****************************!*\
  !*** ./src/models/hash.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HashDictionary = void 0;
class HashDictionary extends Map {
    static #compareItems([a1, c1], [a2, c2]) {
        return a1.localeCompare(a2) ||
            c1.localeCompare(c2);
    }
    sorted() {
        return Array.from(this.entries()).sort(HashDictionary.#compareItems);
    }
}
exports.HashDictionary = HashDictionary;


/***/ }),

/***/ "./src/models/index.ts":
/*!*****************************!*\
  !*** ./src/models/index.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Vulnerability = void 0;
__exportStar(__webpack_require__(/*! ./attachment */ "./src/models/attachment.ts"), exports);
__exportStar(__webpack_require__(/*! ./bom */ "./src/models/bom.ts"), exports);
__exportStar(__webpack_require__(/*! ./bomLink */ "./src/models/bomLink.ts"), exports);
__exportStar(__webpack_require__(/*! ./bomRef */ "./src/models/bomRef.ts"), exports);
__exportStar(__webpack_require__(/*! ./component */ "./src/models/component.ts"), exports);
__exportStar(__webpack_require__(/*! ./copyright */ "./src/models/copyright.ts"), exports);
__exportStar(__webpack_require__(/*! ./externalReference */ "./src/models/externalReference.ts"), exports);
__exportStar(__webpack_require__(/*! ./hash */ "./src/models/hash.ts"), exports);
__exportStar(__webpack_require__(/*! ./license */ "./src/models/license.ts"), exports);
__exportStar(__webpack_require__(/*! ./lifecycle */ "./src/models/lifecycle.ts"), exports);
__exportStar(__webpack_require__(/*! ./metadata */ "./src/models/metadata.ts"), exports);
__exportStar(__webpack_require__(/*! ./organizationalContact */ "./src/models/organizationalContact.ts"), exports);
__exportStar(__webpack_require__(/*! ./organizationalEntity */ "./src/models/organizationalEntity.ts"), exports);
__exportStar(__webpack_require__(/*! ./property */ "./src/models/property.ts"), exports);
__exportStar(__webpack_require__(/*! ./service */ "./src/models/service.ts"), exports);
__exportStar(__webpack_require__(/*! ./swid */ "./src/models/swid.ts"), exports);
__exportStar(__webpack_require__(/*! ./tool */ "./src/models/tool.ts"), exports);
exports.Vulnerability = __importStar(__webpack_require__(/*! ./vulnerability */ "./src/models/vulnerability/index.ts"));


/***/ }),

/***/ "./src/models/license.ts":
/*!*******************************!*\
  !*** ./src/models/license.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LicenseRepository = exports.SpdxLicense = exports.NamedLicense = exports.LicenseExpression = void 0;
class LicenseExpression {
    #expression;
    acknowledgement;
    constructor(expression) {
        this.expression = expression;
    }
    get expression() {
        return this.#expression;
    }
    set expression(value) {
        if (value === '') {
            throw new RangeError('value is empty string');
        }
        this.#expression = value;
    }
    compare(other) {
        return this.#expression.localeCompare(other.#expression);
    }
}
exports.LicenseExpression = LicenseExpression;
class DisjunctiveLicenseBase {
    acknowledgement;
    text;
    #url;
    constructor(op = {}) {
        this.acknowledgement = op.acknowledgement;
        this.text = op.text;
        this.url = op.url;
    }
    get url() {
        return this.#url;
    }
    set url(value) {
        this.#url = value === ''
            ? undefined
            : value;
    }
}
class NamedLicense extends DisjunctiveLicenseBase {
    name;
    constructor(name, op = {}) {
        super(op);
        this.name = name;
    }
    compare(other) {
        return this.name.localeCompare(other.name);
    }
}
exports.NamedLicense = NamedLicense;
class SpdxLicense extends DisjunctiveLicenseBase {
    #id;
    constructor(id, op = {}) {
        super(op);
        this.id = id;
    }
    get id() {
        return this.#id;
    }
    set id(value) {
        if (value === '') {
            throw new RangeError('value is empty string');
        }
        this.#id = value;
    }
    compare(other) {
        return this.#id.localeCompare(other.#id);
    }
}
exports.SpdxLicense = SpdxLicense;
class LicenseRepository extends Set {
    static #compareItems(a, b) {
        if (a.constructor === b.constructor) {
            return a.compare(b);
        }
        return a.constructor.name.localeCompare(b.constructor.name);
    }
    sorted() {
        return Array.from(this).sort(LicenseRepository.#compareItems);
    }
}
exports.LicenseRepository = LicenseRepository;


/***/ }),

/***/ "./src/models/lifecycle.ts":
/*!*********************************!*\
  !*** ./src/models/lifecycle.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LifecycleRepository = exports.NamedLifecycle = void 0;
class NamedLifecycle {
    name;
    description;
    constructor(name, op = {}) {
        this.name = name;
        this.description = op.description;
    }
    compare(other) {
        return this.name.localeCompare(other.name);
    }
}
exports.NamedLifecycle = NamedLifecycle;
class LifecycleRepository extends Set {
    static #compareItems(a, b) {
        if (a.constructor === b.constructor) {
            return a instanceof NamedLifecycle
                ? a.compare(b)
                : a.localeCompare(b);
        }
        return a.constructor.name.localeCompare(b.constructor.name);
    }
    sorted() {
        return Array.from(this).sort(LifecycleRepository.#compareItems);
    }
}
exports.LifecycleRepository = LifecycleRepository;


/***/ }),

/***/ "./src/models/metadata.ts":
/*!********************************!*\
  !*** ./src/models/metadata.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Metadata = void 0;
const license_1 = __webpack_require__(/*! ./license */ "./src/models/license.ts");
const lifecycle_1 = __webpack_require__(/*! ./lifecycle */ "./src/models/lifecycle.ts");
const organizationalContact_1 = __webpack_require__(/*! ./organizationalContact */ "./src/models/organizationalContact.ts");
const property_1 = __webpack_require__(/*! ./property */ "./src/models/property.ts");
const tool_1 = __webpack_require__(/*! ./tool */ "./src/models/tool.ts");
class Metadata {
    timestamp;
    lifecycles;
    tools;
    authors;
    component;
    manufacture;
    supplier;
    licenses;
    properties;
    constructor(op = {}) {
        this.timestamp = op.timestamp;
        this.lifecycles = op.lifecycles ?? new lifecycle_1.LifecycleRepository();
        this.tools = op.tools ?? new tool_1.Tools();
        this.authors = op.authors ?? new organizationalContact_1.OrganizationalContactRepository();
        this.component = op.component;
        this.manufacture = op.manufacture;
        this.supplier = op.supplier;
        this.licenses = op.licenses ?? new license_1.LicenseRepository();
        this.properties = op.properties ?? new property_1.PropertyRepository();
    }
}
exports.Metadata = Metadata;


/***/ }),

/***/ "./src/models/organizationalContact.ts":
/*!*********************************************!*\
  !*** ./src/models/organizationalContact.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OrganizationalContactRepository = exports.OrganizationalContact = void 0;
const sortable_1 = __webpack_require__(/*! ../_helpers/sortable */ "./src/_helpers/sortable.ts");
class OrganizationalContact {
    name;
    email;
    phone;
    constructor(op = {}) {
        this.name = op.name;
        this.email = op.email;
        this.phone = op.phone;
    }
    compare(other) {
        return (this.name ?? '').localeCompare(other.name ?? '') ||
            (this.email ?? '').localeCompare(other.email ?? '') ||
            (this.phone ?? '').localeCompare(other.phone ?? '');
    }
}
exports.OrganizationalContact = OrganizationalContact;
class OrganizationalContactRepository extends sortable_1.SortableComparables {
}
exports.OrganizationalContactRepository = OrganizationalContactRepository;


/***/ }),

/***/ "./src/models/organizationalEntity.ts":
/*!********************************************!*\
  !*** ./src/models/organizationalEntity.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OrganizationalEntityRepository = exports.OrganizationalEntity = void 0;
const sortable_1 = __webpack_require__(/*! ../_helpers/sortable */ "./src/_helpers/sortable.ts");
const organizationalContact_1 = __webpack_require__(/*! ./organizationalContact */ "./src/models/organizationalContact.ts");
class OrganizationalEntity {
    name;
    url;
    contact;
    constructor(op = {}) {
        this.name = op.name;
        this.url = op.url ?? new Set();
        this.contact = op.contact ?? new organizationalContact_1.OrganizationalContactRepository();
    }
    compare(other) {
        return (this.name ?? '').localeCompare(other.name ?? '') ||
            this.contact.compare(other.contact) ||
            (new sortable_1.SortableStringables(this.url)).compare(new sortable_1.SortableStringables(other.url));
    }
}
exports.OrganizationalEntity = OrganizationalEntity;
class OrganizationalEntityRepository extends sortable_1.SortableComparables {
}
exports.OrganizationalEntityRepository = OrganizationalEntityRepository;


/***/ }),

/***/ "./src/models/property.ts":
/*!********************************!*\
  !*** ./src/models/property.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PropertyRepository = exports.Property = void 0;
const sortable_1 = __webpack_require__(/*! ../_helpers/sortable */ "./src/_helpers/sortable.ts");
class Property {
    name;
    value;
    constructor(name, value) {
        this.name = name;
        this.value = value;
    }
    compare(other) {
        return this.name.localeCompare(other.name) ||
            this.value.localeCompare(other.value);
    }
}
exports.Property = Property;
class PropertyRepository extends sortable_1.SortableComparables {
}
exports.PropertyRepository = PropertyRepository;


/***/ }),

/***/ "./src/models/service.ts":
/*!*******************************!*\
  !*** ./src/models/service.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServiceRepository = exports.Service = void 0;
const sortable_1 = __webpack_require__(/*! ../_helpers/sortable */ "./src/_helpers/sortable.ts");
const tree_1 = __webpack_require__(/*! ../_helpers/tree */ "./src/_helpers/tree.ts");
const bomRef_1 = __webpack_require__(/*! ./bomRef */ "./src/models/bomRef.ts");
const externalReference_1 = __webpack_require__(/*! ./externalReference */ "./src/models/externalReference.ts");
const license_1 = __webpack_require__(/*! ./license */ "./src/models/license.ts");
const property_1 = __webpack_require__(/*! ./property */ "./src/models/property.ts");
class Service {
    provider;
    group;
    name;
    version;
    description;
    licenses;
    externalReferences;
    services;
    properties;
    #bomRef;
    dependencies;
    constructor(name, op = {}) {
        this.#bomRef = new bomRef_1.BomRef(op.bomRef);
        this.provider = op.provider;
        this.group = op.group;
        this.name = name;
        this.version = op.version;
        this.description = op.description;
        this.licenses = op.licenses ?? new license_1.LicenseRepository();
        this.externalReferences = op.externalReferences ?? new externalReference_1.ExternalReferenceRepository();
        this.services = op.services ?? new ServiceRepository();
        this.properties = op.properties ?? new property_1.PropertyRepository();
        this.dependencies = op.dependencies ?? new bomRef_1.BomRefRepository();
    }
    get bomRef() {
        return this.#bomRef;
    }
    compare(other) {
        const bomRefCompare = this.bomRef.compare(other.bomRef);
        if (bomRefCompare !== 0) {
            return bomRefCompare;
        }
        return (this.group ?? '').localeCompare(other.group ?? '') ||
            this.name.localeCompare(other.name) ||
            (this.version ?? '').localeCompare(other.version ?? '');
    }
}
exports.Service = Service;
class ServiceRepository extends sortable_1.SortableComparables {
    *[tree_1.treeIteratorSymbol]() {
        for (const service of this) {
            yield service;
            yield* service.services[tree_1.treeIteratorSymbol]();
        }
    }
}
exports.ServiceRepository = ServiceRepository;


/***/ }),

/***/ "./src/models/swid.ts":
/*!****************************!*\
  !*** ./src/models/swid.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SWID = void 0;
const integer_1 = __webpack_require__(/*! ../types/integer */ "./src/types/integer.ts");
class SWID {
    tagId;
    name;
    version;
    patch;
    text;
    url;
    #tagVersion;
    constructor(tagId, name, op = {}) {
        this.tagId = tagId;
        this.name = name;
        this.version = op.version;
        this.patch = op.patch;
        this.text = op.text;
        this.url = op.url;
        this.tagVersion = op.tagVersion;
    }
    get tagVersion() {
        return this.#tagVersion;
    }
    set tagVersion(value) {
        if (value !== undefined && !(0, integer_1.isNonNegativeInteger)(value)) {
            throw new TypeError('Not NonNegativeInteger nor undefined');
        }
        this.#tagVersion = value;
    }
}
exports.SWID = SWID;


/***/ }),

/***/ "./src/models/tool.ts":
/*!****************************!*\
  !*** ./src/models/tool.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Tools = exports.ToolRepository = exports.Tool = void 0;
const sortable_1 = __webpack_require__(/*! ../_helpers/sortable */ "./src/_helpers/sortable.ts");
const component_1 = __webpack_require__(/*! ./component */ "./src/models/component.ts");
const externalReference_1 = __webpack_require__(/*! ./externalReference */ "./src/models/externalReference.ts");
const hash_1 = __webpack_require__(/*! ./hash */ "./src/models/hash.ts");
const service_1 = __webpack_require__(/*! ./service */ "./src/models/service.ts");
class Tool {
    vendor;
    name;
    version;
    hashes;
    externalReferences;
    constructor(op = {}) {
        this.vendor = op.vendor;
        this.name = op.name;
        this.version = op.version;
        this.hashes = op.hashes ?? new hash_1.HashDictionary();
        this.externalReferences = op.externalReferences ?? new externalReference_1.ExternalReferenceRepository();
    }
    compare(other) {
        return (this.vendor ?? '').localeCompare(other.vendor ?? '') ||
            (this.name ?? '').localeCompare(other.name ?? '') ||
            (this.version ?? '').localeCompare(other.version ?? '');
    }
    static fromComponent(component) {
        return new Tool({
            vendor: component.group,
            name: component.name,
            version: component.version,
            hashes: component.hashes,
            externalReferences: component.externalReferences
        });
    }
    static fromService(service) {
        return new Tool({
            vendor: service.group,
            name: service.name,
            version: service.version,
            externalReferences: service.externalReferences
        });
    }
}
exports.Tool = Tool;
class ToolRepository extends sortable_1.SortableComparables {
}
exports.ToolRepository = ToolRepository;
class Tools {
    components;
    services;
    tools;
    constructor(op = {}) {
        this.components = op.components ?? new component_1.ComponentRepository();
        this.services = op.services ?? new service_1.ServiceRepository();
        this.tools = op.tools ?? new ToolRepository();
    }
    get size() {
        return this.components.size
            + this.services.size
            + this.tools.size;
    }
}
exports.Tools = Tools;


/***/ }),

/***/ "./src/models/vulnerability/advisory.ts":
/*!**********************************************!*\
  !*** ./src/models/vulnerability/advisory.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AdvisoryRepository = exports.Advisory = void 0;
const sortable_1 = __webpack_require__(/*! ../../_helpers/sortable */ "./src/_helpers/sortable.ts");
class Advisory {
    title;
    url;
    constructor(url, op = {}) {
        this.url = url;
        this.title = op.title;
    }
    compare(other) {
        return this.url.toString().localeCompare(other.url.toString()) ||
            (this.title ?? '').localeCompare(other.title ?? '');
    }
}
exports.Advisory = Advisory;
class AdvisoryRepository extends sortable_1.SortableComparables {
}
exports.AdvisoryRepository = AdvisoryRepository;


/***/ }),

/***/ "./src/models/vulnerability/affect.ts":
/*!********************************************!*\
  !*** ./src/models/vulnerability/affect.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AffectedVersionRepository = exports.AffectedVersionRange = exports.AffectedSingleVersion = exports.AffectRepository = exports.Affect = void 0;
const sortable_1 = __webpack_require__(/*! ../../_helpers/sortable */ "./src/_helpers/sortable.ts");
class Affect {
    ref;
    versions;
    constructor(ref, op = {}) {
        this.ref = ref;
        this.versions = op.versions ?? new AffectedVersionRepository();
    }
    compare(other) {
        return this.ref.compare(other.ref) ||
            this.versions.compare(other.versions);
    }
}
exports.Affect = Affect;
class AffectRepository extends sortable_1.SortableComparables {
}
exports.AffectRepository = AffectRepository;
class AffectedSingleVersion {
    version;
    status;
    constructor(version, op = {}) {
        this.version = version;
        this.status = op.status;
    }
    compare(other) {
        return (this.version).localeCompare(other.version) ||
            (this.status ?? '').localeCompare(other.status ?? '');
    }
}
exports.AffectedSingleVersion = AffectedSingleVersion;
class AffectedVersionRange {
    range;
    status;
    constructor(range, op = {}) {
        this.range = range;
        this.status = op.status;
    }
    compare(other) {
        return (this.range).localeCompare(other.range) ||
            (this.status ?? '').localeCompare(other.status ?? '');
    }
}
exports.AffectedVersionRange = AffectedVersionRange;
class AffectedVersionRepository extends sortable_1.SortableComparables {
}
exports.AffectedVersionRepository = AffectedVersionRepository;


/***/ }),

/***/ "./src/models/vulnerability/analysis.ts":
/*!**********************************************!*\
  !*** ./src/models/vulnerability/analysis.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Analysis = void 0;
const analysisResponse_1 = __webpack_require__(/*! ../../enums/vulnerability/analysisResponse */ "./src/enums/vulnerability/analysisResponse.ts");
class Analysis {
    state;
    justification;
    response;
    detail;
    constructor(op = {}) {
        this.state = op.state;
        this.justification = op.justification;
        this.response = op.response ?? new analysisResponse_1.AnalysisResponseRepository();
        this.detail = op.detail;
    }
}
exports.Analysis = Analysis;


/***/ }),

/***/ "./src/models/vulnerability/credits.ts":
/*!*********************************************!*\
  !*** ./src/models/vulnerability/credits.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Credits = void 0;
const organizationalContact_1 = __webpack_require__(/*! ../organizationalContact */ "./src/models/organizationalContact.ts");
const organizationalEntity_1 = __webpack_require__(/*! ../organizationalEntity */ "./src/models/organizationalEntity.ts");
class Credits {
    organizations;
    individuals;
    constructor(op = {}) {
        this.organizations = op.organizations ?? new organizationalEntity_1.OrganizationalEntityRepository();
        this.individuals = op.individuals ?? new organizationalContact_1.OrganizationalContactRepository();
    }
}
exports.Credits = Credits;


/***/ }),

/***/ "./src/models/vulnerability/index.ts":
/*!*******************************************!*\
  !*** ./src/models/vulnerability/index.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./advisory */ "./src/models/vulnerability/advisory.ts"), exports);
__exportStar(__webpack_require__(/*! ./affect */ "./src/models/vulnerability/affect.ts"), exports);
__exportStar(__webpack_require__(/*! ./analysis */ "./src/models/vulnerability/analysis.ts"), exports);
__exportStar(__webpack_require__(/*! ./credits */ "./src/models/vulnerability/credits.ts"), exports);
__exportStar(__webpack_require__(/*! ./rating */ "./src/models/vulnerability/rating.ts"), exports);
__exportStar(__webpack_require__(/*! ./reference */ "./src/models/vulnerability/reference.ts"), exports);
__exportStar(__webpack_require__(/*! ./source */ "./src/models/vulnerability/source.ts"), exports);
__exportStar(__webpack_require__(/*! ./vulnerability */ "./src/models/vulnerability/vulnerability.ts"), exports);


/***/ }),

/***/ "./src/models/vulnerability/rating.ts":
/*!********************************************!*\
  !*** ./src/models/vulnerability/rating.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RatingRepository = exports.Rating = void 0;
const sortable_1 = __webpack_require__(/*! ../../_helpers/sortable */ "./src/_helpers/sortable.ts");
class Rating {
    source;
    score;
    severity;
    method;
    vector;
    justification;
    constructor(op = {}) {
        this.source = op.source;
        this.score = op.score;
        this.severity = op.severity;
        this.method = op.method;
        this.vector = op.vector;
        this.justification = op.justification;
    }
    compare(other) {
        return ((this.score ?? 0) - (other.score ?? 0)) ||
            (this.vector ?? '').localeCompare(other.vector ?? '') ||
            (this.justification ?? '').localeCompare(other.justification ?? '') ||
            (this.severity ?? '').localeCompare(other.severity ?? '') ||
            (this.method ?? '').localeCompare(other.method ?? '') ||
            (this.source && other.source ? this.source.compare(other.source) : 0);
    }
}
exports.Rating = Rating;
class RatingRepository extends sortable_1.SortableComparables {
}
exports.RatingRepository = RatingRepository;


/***/ }),

/***/ "./src/models/vulnerability/reference.ts":
/*!***********************************************!*\
  !*** ./src/models/vulnerability/reference.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReferenceRepository = exports.Reference = void 0;
const sortable_1 = __webpack_require__(/*! ../../_helpers/sortable */ "./src/_helpers/sortable.ts");
class Reference {
    id;
    source;
    constructor(id, source) {
        this.id = id;
        this.source = source;
    }
    compare(other) {
        return this.id.localeCompare(other.id) ||
            this.source.compare(other.source);
    }
}
exports.Reference = Reference;
class ReferenceRepository extends sortable_1.SortableComparables {
}
exports.ReferenceRepository = ReferenceRepository;


/***/ }),

/***/ "./src/models/vulnerability/source.ts":
/*!********************************************!*\
  !*** ./src/models/vulnerability/source.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Source = void 0;
class Source {
    name;
    url;
    constructor(op = {}) {
        this.name = op.name;
        this.url = op.url;
    }
    compare(other) {
        return (this.url?.toString() ?? '').localeCompare(other.url?.toString() ?? '') ||
            (this.name ?? '').localeCompare(other.name ?? '');
    }
}
exports.Source = Source;


/***/ }),

/***/ "./src/models/vulnerability/vulnerability.ts":
/*!***************************************************!*\
  !*** ./src/models/vulnerability/vulnerability.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VulnerabilityRepository = exports.Vulnerability = void 0;
const sortable_1 = __webpack_require__(/*! ../../_helpers/sortable */ "./src/_helpers/sortable.ts");
const cwe_1 = __webpack_require__(/*! ../../types/cwe */ "./src/types/cwe.ts");
const bomRef_1 = __webpack_require__(/*! ../bomRef */ "./src/models/bomRef.ts");
const property_1 = __webpack_require__(/*! ../property */ "./src/models/property.ts");
const tool_1 = __webpack_require__(/*! ../tool */ "./src/models/tool.ts");
const advisory_1 = __webpack_require__(/*! ./advisory */ "./src/models/vulnerability/advisory.ts");
const affect_1 = __webpack_require__(/*! ./affect */ "./src/models/vulnerability/affect.ts");
const rating_1 = __webpack_require__(/*! ./rating */ "./src/models/vulnerability/rating.ts");
const reference_1 = __webpack_require__(/*! ./reference */ "./src/models/vulnerability/reference.ts");
class Vulnerability {
    #bomRef;
    id;
    source;
    references;
    ratings;
    cwes;
    description;
    detail;
    recommendation;
    advisories;
    created;
    published;
    updated;
    credits;
    tools;
    analysis;
    affects;
    properties;
    constructor(op = {}) {
        this.#bomRef = new bomRef_1.BomRef(op.bomRef);
        this.id = op.id;
        this.source = op.source;
        this.references = op.references ?? new reference_1.ReferenceRepository();
        this.ratings = op.ratings ?? new rating_1.RatingRepository();
        this.cwes = op.cwes ?? new cwe_1.CweRepository();
        this.description = op.description;
        this.detail = op.detail;
        this.recommendation = op.recommendation;
        this.advisories = op.advisories ?? new advisory_1.AdvisoryRepository();
        this.created = op.created;
        this.published = op.published;
        this.updated = op.updated;
        this.credits = op.credits;
        this.tools = op.tools ?? new tool_1.Tools();
        this.analysis = op.analysis;
        this.affects = op.affects ?? new affect_1.AffectRepository();
        this.properties = op.properties ?? new property_1.PropertyRepository();
    }
    get bomRef() {
        return this.#bomRef;
    }
    compare(other) {
        const bomRefCompare = this.bomRef.compare(other.bomRef);
        if (bomRefCompare !== 0) {
            return bomRefCompare;
        }
        return (this.id ?? '').localeCompare(other.id ?? '') ||
            (this.created?.getTime() ?? 0) - (other.created?.getTime() ?? 0) ||
            (this.published?.getTime() ?? 0) - (other.published?.getTime() ?? 0) ||
            (this.updated?.getTime() ?? 0) - (other.updated?.getTime() ?? 0) ||
            this.ratings.compare(other.ratings) ||
            this.cwes.compare(other.cwes) ||
            (this.description ?? '').localeCompare(other.description ?? '') ||
            (this.detail ?? '').localeCompare(other.detail ?? '') ||
            (this.recommendation ?? '').localeCompare(other.recommendation ?? '') ||
            (this.source && other.source ? this.source.compare(other.source) : 0) ||
            this.properties.compare(other.properties);
    }
}
exports.Vulnerability = Vulnerability;
class VulnerabilityRepository extends sortable_1.SortableComparables {
}
exports.VulnerabilityRepository = VulnerabilityRepository;


/***/ }),

/***/ "./src/serialize/baseSerializer.ts":
/*!*****************************************!*\
  !*** ./src/serialize/baseSerializer.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BaseSerializer = void 0;
const tree_1 = __webpack_require__(/*! ../_helpers/tree */ "./src/_helpers/tree.ts");
const bomRefDiscriminator_1 = __webpack_require__(/*! ./bomRefDiscriminator */ "./src/serialize/bomRefDiscriminator.ts");
class BaseSerializer {
    *#getAllBomRefs(bom) {
        if (bom.metadata.component !== undefined) {
            yield bom.metadata.component.bomRef;
            for (const { bomRef } of bom.metadata.component.components[tree_1.treeIteratorSymbol]()) {
                yield bomRef;
            }
        }
        for (const { bomRef } of bom.components[tree_1.treeIteratorSymbol]()) {
            yield bomRef;
        }
        for (const { bomRef } of bom.services[tree_1.treeIteratorSymbol]()) {
            yield bomRef;
        }
        for (const { bomRef } of bom.vulnerabilities) {
            yield bomRef;
        }
    }
    #normalize(bom, options) {
        const bomRefDiscriminator = new bomRefDiscriminator_1.BomRefDiscriminator(this.#getAllBomRefs(bom));
        bomRefDiscriminator.discriminate();
        try {
            return this._normalize(bom, options);
        }
        finally {
            bomRefDiscriminator.reset();
        }
    }
    serialize(bom, options) {
        return this._serialize(this.#normalize(bom, options), options);
    }
}
exports.BaseSerializer = BaseSerializer;


/***/ }),

/***/ "./src/serialize/bomRefDiscriminator.ts":
/*!**********************************************!*\
  !*** ./src/serialize/bomRefDiscriminator.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BomRefDiscriminator = void 0;
class BomRefDiscriminator {
    #originalValues;
    #prefix;
    constructor(bomRefs, prefix = 'BomRef') {
        this.#originalValues = Array.from(bomRefs, r => [r, r.value]);
        this.#prefix = prefix;
    }
    get prefix() {
        return this.#prefix;
    }
    *[Symbol.iterator]() {
        for (const [bomRef] of this.#originalValues) {
            yield bomRef;
        }
    }
    discriminate() {
        const knownRefValues = new Set(['']);
        for (const [bomRef] of this.#originalValues) {
            let value = bomRef.value;
            if (value === undefined || knownRefValues.has(value)) {
                value = this.#makeUniqueId();
                bomRef.value = value;
            }
            knownRefValues.add(value);
        }
    }
    reset() {
        for (const [bomRef, originalValue] of this.#originalValues) {
            bomRef.value = originalValue;
        }
    }
    #makeUniqueId() {
        return `${this.#prefix}${Math.random().toString(32).substring(1)}${Math.random().toString(32).substring(1)}`;
    }
}
exports.BomRefDiscriminator = BomRefDiscriminator;


/***/ }),

/***/ "./src/serialize/errors.ts":
/*!*********************************!*\
  !*** ./src/serialize/errors.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MissingOptionalDependencyError = void 0;
const errors_1 = __webpack_require__(/*! ../_optPlug.node/errors */ "./src/_optPlug.node/errors.ts");
class MissingOptionalDependencyError extends errors_1.OptPlugError {
}
exports.MissingOptionalDependencyError = MissingOptionalDependencyError;


/***/ }),

/***/ "./src/serialize/index.common.ts":
/*!***************************************!*\
  !*** ./src/serialize/index.common.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.XML = exports.JSON = exports.Types = void 0;
__exportStar(__webpack_require__(/*! ./bomRefDiscriminator */ "./src/serialize/bomRefDiscriminator.ts"), exports);
__exportStar(__webpack_require__(/*! ./errors */ "./src/serialize/errors.ts"), exports);
exports.Types = __importStar(__webpack_require__(/*! ./types */ "./src/serialize/types.ts"));
__exportStar(__webpack_require__(/*! ./baseSerializer */ "./src/serialize/baseSerializer.ts"), exports);
exports.JSON = __importStar(__webpack_require__(/*! ./json */ "./src/serialize/json/index.ts"));
__exportStar(__webpack_require__(/*! ./jsonSerializer */ "./src/serialize/jsonSerializer.ts"), exports);
exports.XML = __importStar(__webpack_require__(/*! ./xml */ "./src/serialize/xml/index.ts"));
__exportStar(__webpack_require__(/*! ./xmlBaseSerializer */ "./src/serialize/xmlBaseSerializer.ts"), exports);


/***/ }),

/***/ "./src/serialize/index.web.ts":
/*!************************************!*\
  !*** ./src/serialize/index.web.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./index.common */ "./src/serialize/index.common.ts"), exports);
__exportStar(__webpack_require__(/*! ./xmlSerializer.web */ "./src/serialize/xmlSerializer.web.ts"), exports);


/***/ }),

/***/ "./src/serialize/json/index.ts":
/*!*************************************!*\
  !*** ./src/serialize/json/index.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Types = exports.Normalize = void 0;
exports.Normalize = __importStar(__webpack_require__(/*! ./normalize */ "./src/serialize/json/normalize.ts"));
exports.Types = __importStar(__webpack_require__(/*! ./types */ "./src/serialize/json/types.ts"));


/***/ }),

/***/ "./src/serialize/json/normalize.ts":
/*!*****************************************!*\
  !*** ./src/serialize/json/normalize.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VulnerabilityAnalysisNormalizer = exports.VulnerabilityAffectedVersionNormalizer = exports.VulnerabilityAffectNormalizer = exports.VulnerabilityCreditsNormalizer = exports.VulnerabilityAdvisoryNormalizer = exports.VulnerabilityRatingNormalizer = exports.VulnerabilityReferenceNormalizer = exports.VulnerabilitySourceNormalizer = exports.VulnerabilityNormalizer = exports.DependencyGraphNormalizer = exports.PropertyNormalizer = exports.AttachmentNormalizer = exports.ExternalReferenceNormalizer = exports.SWIDNormalizer = exports.LicenseNormalizer = exports.ComponentEvidenceNormalizer = exports.ServiceNormalizer = exports.ComponentNormalizer = exports.OrganizationalEntityNormalizer = exports.OrganizationalContactNormalizer = exports.HashNormalizer = exports.ToolsNormalizer = exports.ToolNormalizer = exports.LifecycleNormalizer = exports.MetadataNormalizer = exports.BomNormalizer = exports.Factory = void 0;
const iterable_1 = __webpack_require__(/*! ../../_helpers/iterable */ "./src/_helpers/iterable.ts");
const notUndefined_1 = __webpack_require__(/*! ../../_helpers/notUndefined */ "./src/_helpers/notUndefined.ts");
const tree_1 = __webpack_require__(/*! ../../_helpers/tree */ "./src/_helpers/tree.ts");
const uri_1 = __webpack_require__(/*! ../../_helpers/uri */ "./src/_helpers/uri.ts");
const license_1 = __webpack_require__(/*! ../../models/license */ "./src/models/license.ts");
const lifecycle_1 = __webpack_require__(/*! ../../models/lifecycle */ "./src/models/lifecycle.ts");
const tool_1 = __webpack_require__(/*! ../../models/tool */ "./src/models/tool.ts");
const affect_1 = __webpack_require__(/*! ../../models/vulnerability/affect */ "./src/models/vulnerability/affect.ts");
const spdx_1 = __webpack_require__(/*! ../../spdx */ "./src/spdx.ts");
const enums_1 = __webpack_require__(/*! ../../spec/enums */ "./src/spec/enums.ts");
const types_1 = __webpack_require__(/*! ./types */ "./src/serialize/json/types.ts");
class Factory {
    #spec;
    constructor(spec) {
        this.#spec = spec;
    }
    get spec() {
        return this.#spec;
    }
    makeForBom() {
        return new BomNormalizer(this);
    }
    makeForMetadata() {
        return new MetadataNormalizer(this);
    }
    makeForComponent() {
        return new ComponentNormalizer(this);
    }
    makeForService() {
        return new ServiceNormalizer(this);
    }
    makeForComponentEvidence() {
        return new ComponentEvidenceNormalizer(this);
    }
    makeForLifecycle() {
        return new LifecycleNormalizer(this);
    }
    makeForTool() {
        return new ToolNormalizer(this);
    }
    makeForTools() {
        return new ToolsNormalizer(this);
    }
    makeForOrganizationalContact() {
        return new OrganizationalContactNormalizer(this);
    }
    makeForOrganizationalEntity() {
        return new OrganizationalEntityNormalizer(this);
    }
    makeForHash() {
        return new HashNormalizer(this);
    }
    makeForLicense() {
        return new LicenseNormalizer(this);
    }
    makeForSWID() {
        return new SWIDNormalizer(this);
    }
    makeForExternalReference() {
        return new ExternalReferenceNormalizer(this);
    }
    makeForAttachment() {
        return new AttachmentNormalizer(this);
    }
    makeForProperty() {
        return new PropertyNormalizer(this);
    }
    makeForDependencyGraph() {
        return new DependencyGraphNormalizer(this);
    }
    makeForVulnerability() {
        return new VulnerabilityNormalizer(this);
    }
    makeForVulnerabilitySource() {
        return new VulnerabilitySourceNormalizer(this);
    }
    makeForVulnerabilityReference() {
        return new VulnerabilityReferenceNormalizer(this);
    }
    makeForVulnerabilityRating() {
        return new VulnerabilityRatingNormalizer(this);
    }
    makeForVulnerabilityAdvisory() {
        return new VulnerabilityAdvisoryNormalizer(this);
    }
    makeForVulnerabilityCredits() {
        return new VulnerabilityCreditsNormalizer(this);
    }
    makeForVulnerabilityAffect() {
        return new VulnerabilityAffectNormalizer(this);
    }
    makeForVulnerabilityAffectedVersion() {
        return new VulnerabilityAffectedVersionNormalizer(this);
    }
    makeForVulnerabilityAnalysis() {
        return new VulnerabilityAnalysisNormalizer(this);
    }
}
exports.Factory = Factory;
const schemaUrl = new Map([
    [enums_1.Version.v1dot6, 'http://cyclonedx.org/schema/bom-1.6.schema.json'],
    [enums_1.Version.v1dot5, 'http://cyclonedx.org/schema/bom-1.5.schema.json'],
    [enums_1.Version.v1dot4, 'http://cyclonedx.org/schema/bom-1.4.schema.json'],
    [enums_1.Version.v1dot3, 'http://cyclonedx.org/schema/bom-1.3a.schema.json'],
    [enums_1.Version.v1dot2, 'http://cyclonedx.org/schema/bom-1.2b.schema.json']
]);
class BaseJsonNormalizer {
    _factory;
    constructor(factory) {
        this._factory = factory;
    }
    get factory() {
        return this._factory;
    }
}
class BomNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            $schema: schemaUrl.get(this._factory.spec.version),
            bomFormat: 'CycloneDX',
            specVersion: this._factory.spec.version,
            version: data.version,
            serialNumber: this.#isEligibleSerialNumber(data.serialNumber)
                ? data.serialNumber
                : undefined,
            metadata: this._factory.makeForMetadata().normalize(data.metadata, options),
            components: data.components.size > 0
                ? this._factory.makeForComponent().normalizeIterable(data.components, options)
                : [],
            services: this._factory.spec.supportsServices && data.services.size > 0
                ? this._factory.makeForService().normalizeIterable(data.services, options)
                : undefined,
            dependencies: this._factory.spec.supportsDependencyGraph
                ? this._factory.makeForDependencyGraph().normalize(data, options)
                : undefined,
            vulnerabilities: this._factory.spec.supportsVulnerabilities && data.vulnerabilities.size > 0
                ? this._factory.makeForVulnerability().normalizeIterable(data.vulnerabilities, options)
                : undefined
        };
    }
    #isEligibleSerialNumber(v) {
        return v !== undefined &&
            /^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/.test(v);
    }
}
exports.BomNormalizer = BomNormalizer;
class MetadataNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        const orgEntityNormalizer = this._factory.makeForOrganizationalEntity();
        return {
            timestamp: data.timestamp?.toISOString(),
            lifecycles: this._factory.spec.supportsMetadataLifecycles && data.lifecycles.size > 0
                ? this._factory.makeForLifecycle().normalizeIterable(data.lifecycles, options)
                : undefined,
            tools: data.tools.size > 0
                ? this._factory.makeForTools().normalize(data.tools, options)
                : undefined,
            authors: data.authors.size > 0
                ? this._factory.makeForOrganizationalContact().normalizeIterable(data.authors, options)
                : undefined,
            component: data.component === undefined
                ? undefined
                : this._factory.makeForComponent().normalize(data.component, options),
            manufacture: data.manufacture === undefined
                ? undefined
                : orgEntityNormalizer.normalize(data.manufacture, options),
            supplier: data.supplier === undefined
                ? undefined
                : orgEntityNormalizer.normalize(data.supplier, options),
            licenses: this._factory.spec.supportsMetadataLicenses && data.licenses.size > 0
                ? this._factory.makeForLicense().normalizeIterable(data.licenses, options)
                : undefined,
            properties: this._factory.spec.supportsMetadataProperties && data.properties.size > 0
                ? this._factory.makeForProperty().normalizeIterable(data.properties, options)
                : undefined
        };
    }
}
exports.MetadataNormalizer = MetadataNormalizer;
class LifecycleNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return data instanceof lifecycle_1.NamedLifecycle
            ? { name: data.name, description: data.description }
            : { phase: data };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(lc => this.normalize(lc, options));
    }
}
exports.LifecycleNormalizer = LifecycleNormalizer;
class ToolNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            vendor: data.vendor || undefined,
            name: data.name || undefined,
            version: data.version || undefined,
            hashes: data.hashes.size > 0
                ? this._factory.makeForHash().normalizeIterable(data.hashes, options)
                : undefined,
            externalReferences: this._factory.spec.supportsToolReferences && data.externalReferences.size > 0
                ? this._factory.makeForExternalReference().normalizeIterable(data.externalReferences, options)
                : undefined
        };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(t => this.normalize(t, options));
    }
}
exports.ToolNormalizer = ToolNormalizer;
class ToolsNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        if (data.tools.size > 0 || !this._factory.spec.supportsToolsComponentsServices) {
            return this._factory.makeForTool().normalizeIterable(new tool_1.ToolRepository((0, iterable_1.chainI)(Array.from(data.components, tool_1.Tool.fromComponent), Array.from(data.services, tool_1.Tool.fromService), data.tools)), options);
        }
        return {
            components: data.components.size > 0
                ? this._factory.makeForComponent().normalizeIterable(data.components, options)
                : undefined,
            services: data.services.size > 0
                ? this._factory.makeForService().normalizeIterable(data.services, options)
                : undefined
        };
    }
}
exports.ToolsNormalizer = ToolsNormalizer;
class HashNormalizer extends BaseJsonNormalizer {
    normalize([algorithm, content], options) {
        const spec = this._factory.spec;
        return spec.supportsHashAlgorithm(algorithm) && spec.supportsHashValue(content)
            ? {
                alg: algorithm,
                content
            }
            : undefined;
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(h => this.normalize(h, options)).filter(notUndefined_1.isNotUndefined);
    }
}
exports.HashNormalizer = HashNormalizer;
class OrganizationalContactNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            name: data.name || undefined,
            email: types_1.JsonSchema.isIdnEmail(data.email)
                ? data.email
                : undefined,
            phone: data.phone || undefined
        };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(oc => this.normalize(oc, options));
    }
}
exports.OrganizationalContactNormalizer = OrganizationalContactNormalizer;
class OrganizationalEntityNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        const urls = normalizeStringableIter(Array.from(data.url, (s) => (0, uri_1.escapeUri)(s.toString())), options).filter(types_1.JsonSchema.isIriReference);
        return {
            name: data.name || undefined,
            url: urls.length > 0
                ? urls
                : undefined,
            contact: data.contact.size > 0
                ? this._factory.makeForOrganizationalContact().normalizeIterable(data.contact, options)
                : undefined
        };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(oe => this.normalize(oe, options));
    }
}
exports.OrganizationalEntityNormalizer = OrganizationalEntityNormalizer;
class ComponentNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        const spec = this._factory.spec;
        if (!spec.supportsComponentType(data.type)) {
            return undefined;
        }
        const version = data.version ?? '';
        return {
            type: data.type,
            name: data.name,
            group: data.group || undefined,
            version: version.length > 0 || spec.requiresComponentVersion
                ? version
                : undefined,
            'bom-ref': data.bomRef.value || undefined,
            supplier: data.supplier === undefined
                ? undefined
                : this._factory.makeForOrganizationalEntity().normalize(data.supplier, options),
            author: data.author || undefined,
            publisher: data.publisher || undefined,
            description: data.description || undefined,
            scope: data.scope,
            hashes: data.hashes.size > 0
                ? this._factory.makeForHash().normalizeIterable(data.hashes, options)
                : undefined,
            licenses: data.licenses.size > 0
                ? this._factory.makeForLicense().normalizeIterable(data.licenses, options)
                : undefined,
            copyright: data.copyright?.toString() || undefined,
            cpe: data.cpe || undefined,
            purl: data.purl?.toString(),
            swid: data.swid === undefined
                ? undefined
                : this._factory.makeForSWID().normalize(data.swid, options),
            externalReferences: data.externalReferences.size > 0
                ? this._factory.makeForExternalReference().normalizeIterable(data.externalReferences, options)
                : undefined,
            properties: spec.supportsProperties(data) && data.properties.size > 0
                ? this._factory.makeForProperty().normalizeIterable(data.properties, options)
                : undefined,
            components: data.components.size > 0
                ? this.normalizeIterable(data.components, options)
                : undefined,
            evidence: spec.supportsComponentEvidence && data.evidence !== undefined
                ? this._factory.makeForComponentEvidence().normalize(data.evidence, options)
                : undefined
        };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(c => this.normalize(c, options)).filter(notUndefined_1.isNotUndefined);
    }
}
exports.ComponentNormalizer = ComponentNormalizer;
class ServiceNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        const spec = this._factory.spec;
        return {
            'bom-ref': data.bomRef.value || undefined,
            provider: data.provider
                ? this._factory.makeForOrganizationalEntity().normalize(data.provider, options)
                : undefined,
            group: data.group,
            name: data.name,
            version: data.version || undefined,
            description: data.description || undefined,
            licenses: data.licenses.size > 0
                ? this._factory.makeForLicense().normalizeIterable(data.licenses, options)
                : undefined,
            externalReferences: data.externalReferences.size > 0
                ? this._factory.makeForExternalReference().normalizeIterable(data.externalReferences, options)
                : undefined,
            services: data.services.size > 0
                ? this._factory.makeForService().normalizeIterable(data.services, options)
                : undefined,
            properties: spec.supportsProperties(data) && data.properties.size > 0
                ? this._factory.makeForProperty().normalizeIterable(data.properties, options)
                : undefined,
        };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(s => this.normalize(s, options));
    }
}
exports.ServiceNormalizer = ServiceNormalizer;
class ComponentEvidenceNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            licenses: data.licenses.size > 0
                ? this._factory.makeForLicense().normalizeIterable(data.licenses, options)
                : undefined,
            copyright: data.copyright.size > 0
                ? (options.sortLists
                    ? data.copyright.sorted().map(ComponentEvidenceNormalizer.#normalizeCopyright)
                    : Array.from(data.copyright, ComponentEvidenceNormalizer.#normalizeCopyright))
                : undefined
        };
    }
    static #normalizeCopyright(c) {
        return { text: c.toString() };
    }
}
exports.ComponentEvidenceNormalizer = ComponentEvidenceNormalizer;
class LicenseNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        switch (true) {
            case data instanceof license_1.NamedLicense:
                return this.#normalizeNamedLicense(data, options);
            case data instanceof license_1.SpdxLicense:
                return (0, spdx_1.isSupportedSpdxId)(data.id)
                    ? this.#normalizeSpdxLicense(data, options)
                    : this.#normalizeNamedLicense(new license_1.NamedLicense(data.id, { url: data.url }), options);
            case data instanceof license_1.LicenseExpression:
                return this.#normalizeLicenseExpression(data);
            default:
                throw new TypeError('Unexpected LicenseChoice');
        }
    }
    #normalizeNamedLicense(data, options) {
        const url = (0, uri_1.escapeUri)(data.url?.toString());
        return {
            license: {
                name: data.name,
                acknowledgement: this._factory.spec.supportsLicenseAcknowledgement
                    ? data.acknowledgement
                    : undefined,
                text: data.text === undefined
                    ? undefined
                    : this._factory.makeForAttachment().normalize(data.text, options),
                url: types_1.JsonSchema.isIriReference(url)
                    ? url
                    : undefined
            }
        };
    }
    #normalizeSpdxLicense(data, options) {
        const url = (0, uri_1.escapeUri)(data.url?.toString());
        return {
            license: {
                id: data.id,
                acknowledgement: this._factory.spec.supportsLicenseAcknowledgement
                    ? data.acknowledgement
                    : undefined,
                text: data.text === undefined
                    ? undefined
                    : this._factory.makeForAttachment().normalize(data.text, options),
                url: types_1.JsonSchema.isIriReference(url)
                    ? url
                    : undefined
            }
        };
    }
    #normalizeLicenseExpression(data) {
        return {
            expression: data.expression,
            acknowledgement: this._factory.spec.supportsLicenseAcknowledgement
                ? data.acknowledgement
                : undefined
        };
    }
    normalizeIterable(data, options) {
        const licenses = options.sortLists ?? false
            ? data.sorted()
            : Array.from(data);
        if (licenses.length > 1) {
            const expressions = licenses.filter(l => l instanceof license_1.LicenseExpression);
            if (expressions.length > 0) {
                return [this.#normalizeLicenseExpression(expressions[0])];
            }
        }
        return licenses.map(l => this.normalize(l, options));
    }
}
exports.LicenseNormalizer = LicenseNormalizer;
class SWIDNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        const url = (0, uri_1.escapeUri)(data.url?.toString());
        return {
            tagId: data.tagId,
            name: data.name,
            version: data.version || undefined,
            tagVersion: data.tagVersion,
            patch: data.patch,
            text: data.text === undefined
                ? undefined
                : this._factory.makeForAttachment().normalize(data.text, options),
            url: types_1.JsonSchema.isIriReference(url)
                ? url
                : undefined
        };
    }
}
exports.SWIDNormalizer = SWIDNormalizer;
class ExternalReferenceNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return this._factory.spec.supportsExternalReferenceType(data.type)
            ? {
                url: (0, uri_1.escapeUri)(data.url.toString()),
                type: data.type,
                hashes: this._factory.spec.supportsExternalReferenceHashes && data.hashes.size > 0
                    ? this._factory.makeForHash().normalizeIterable(data.hashes, options)
                    : undefined,
                comment: data.comment || undefined
            }
            : undefined;
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(r => this.normalize(r, options)).filter(notUndefined_1.isNotUndefined);
    }
}
exports.ExternalReferenceNormalizer = ExternalReferenceNormalizer;
class AttachmentNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            content: data.content.toString(),
            contentType: data.contentType || undefined,
            encoding: data.encoding
        };
    }
}
exports.AttachmentNormalizer = AttachmentNormalizer;
class PropertyNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            name: data.name,
            value: data.value
        };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(p => this.normalize(p, options));
    }
}
exports.PropertyNormalizer = PropertyNormalizer;
class DependencyGraphNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        const allRefs = new Map();
        if (data.metadata.component !== undefined) {
            allRefs.set(data.metadata.component.bomRef, data.metadata.component.dependencies);
            for (const component of data.metadata.component.components[tree_1.treeIteratorSymbol]()) {
                allRefs.set(component.bomRef, component.dependencies);
            }
        }
        for (const component of data.components[tree_1.treeIteratorSymbol]()) {
            allRefs.set(component.bomRef, component.dependencies);
        }
        for (const service of data.services[tree_1.treeIteratorSymbol]()) {
            allRefs.set(service.bomRef, service.dependencies);
        }
        const normalized = [];
        for (const [ref, deps] of allRefs) {
            const dep = this.#normalizeDependency(ref, deps, allRefs, options);
            if ((0, notUndefined_1.isNotUndefined)(dep)) {
                normalized.push(dep);
            }
        }
        if (options.sortLists ?? false) {
            normalized.sort(({ ref: a }, { ref: b }) => a.localeCompare(b));
        }
        return normalized;
    }
    #normalizeDependency(ref, deps, allRefs, options) {
        const bomRef = ref.toString();
        if (bomRef.length === 0) {
            return undefined;
        }
        const dependsOn = normalizeStringableIter(Array.from(deps).filter(d => allRefs.has(d) && d !== ref), options).filter(d => d.length > 0);
        return {
            ref: bomRef,
            dependsOn: dependsOn.length > 0
                ? dependsOn
                : undefined
        };
    }
}
exports.DependencyGraphNormalizer = DependencyGraphNormalizer;
class VulnerabilityNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            'bom-ref': data.bomRef.value || undefined,
            id: data.id || undefined,
            source: data.source === undefined
                ? undefined
                : this._factory.makeForVulnerabilitySource().normalize(data.source, options),
            references: data.references.size > 0
                ? this._factory.makeForVulnerabilityReference().normalizeIterable(data.references, options)
                : undefined,
            ratings: data.ratings.size > 0
                ? this._factory.makeForVulnerabilityRating().normalizeIterable(data.ratings, options)
                : undefined,
            cwes: data.cwes.size > 0
                ? (options.sortLists ?? false
                    ? data.cwes.sorted()
                    : Array.from(data.cwes))
                : undefined,
            description: data.description,
            detail: data.detail,
            recommendation: data.recommendation,
            advisories: data.advisories.size > 0
                ? this._factory.makeForVulnerabilityAdvisory().normalizeIterable(data.advisories, options)
                : undefined,
            created: data.created?.toISOString(),
            published: data.published?.toISOString(),
            updated: data.updated?.toISOString(),
            credits: data.credits === undefined
                ? undefined
                : this._factory.makeForVulnerabilityCredits().normalize(data.credits, options),
            tools: data.tools.size > 0
                ? this._factory.makeForTools().normalize(data.tools, options)
                : undefined,
            analysis: data.analysis === undefined
                ? undefined
                : this._factory.makeForVulnerabilityAnalysis().normalize(data.analysis, options),
            affects: data.affects.size > 0
                ? this._factory.makeForVulnerabilityAffect().normalizeIterable(data.affects, options)
                : undefined,
            properties: data.properties.size > 0
                ? this._factory.makeForProperty().normalizeIterable(data.properties, options)
                : undefined
        };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(v => this.normalize(v, options));
    }
}
exports.VulnerabilityNormalizer = VulnerabilityNormalizer;
class VulnerabilitySourceNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            name: data.name,
            url: data.url?.toString()
        };
    }
}
exports.VulnerabilitySourceNormalizer = VulnerabilitySourceNormalizer;
class VulnerabilityReferenceNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            id: data.id,
            source: this._factory.makeForVulnerabilitySource().normalize(data.source, options)
        };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(r => this.normalize(r, options));
    }
}
exports.VulnerabilityReferenceNormalizer = VulnerabilityReferenceNormalizer;
class VulnerabilityRatingNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            source: data.source === undefined
                ? undefined
                : this._factory.makeForVulnerabilitySource().normalize(data.source, options),
            score: data.score,
            severity: data.severity,
            method: this._factory.spec.supportsVulnerabilityRatingMethod(data.method)
                ? data.method
                : undefined,
            vector: data.vector,
            justification: data.justification
        };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(r => this.normalize(r, options));
    }
}
exports.VulnerabilityRatingNormalizer = VulnerabilityRatingNormalizer;
class VulnerabilityAdvisoryNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        const url = (0, uri_1.escapeUri)(data.url.toString());
        if (!types_1.JsonSchema.isIriReference(url)) {
            return undefined;
        }
        return {
            title: data.title,
            url
        };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(a => this.normalize(a, options)).filter(notUndefined_1.isNotUndefined);
    }
}
exports.VulnerabilityAdvisoryNormalizer = VulnerabilityAdvisoryNormalizer;
class VulnerabilityCreditsNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            organizations: data.organizations.size > 0
                ? this._factory.makeForOrganizationalEntity().normalizeIterable(data.organizations, options)
                : undefined,
            individuals: data.individuals.size > 0
                ? this._factory.makeForOrganizationalContact().normalizeIterable(data.individuals, options)
                : undefined
        };
    }
}
exports.VulnerabilityCreditsNormalizer = VulnerabilityCreditsNormalizer;
class VulnerabilityAffectNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            ref: data.ref.toString(),
            versions: data.versions.size > 0
                ? this._factory.makeForVulnerabilityAffectedVersion().normalizeIterable(data.versions, options)
                : undefined
        };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(a => this.normalize(a, options));
    }
}
exports.VulnerabilityAffectNormalizer = VulnerabilityAffectNormalizer;
class VulnerabilityAffectedVersionNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        switch (true) {
            case data instanceof affect_1.AffectedSingleVersion:
                return this.#normalizeAffectedSingleVersion(data);
            case data instanceof affect_1.AffectedVersionRange:
                return this.#normalizeAffectedVersionRange(data);
            default:
                throw new TypeError('Unexpected Vulnerability AffectedVersion');
        }
    }
    #normalizeAffectedSingleVersion(data) {
        return data.version.length < 1
            ? undefined
            : {
                version: data.version.substring(0, 1024),
                status: data.status
            };
    }
    #normalizeAffectedVersionRange(data) {
        return data.range.length < 1
            ? undefined
            : {
                range: data.range.substring(0, 1024),
                status: data.status
            };
    }
    normalizeIterable(data, options) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(av => this.normalize(av, options)).filter(notUndefined_1.isNotUndefined);
    }
}
exports.VulnerabilityAffectedVersionNormalizer = VulnerabilityAffectedVersionNormalizer;
class VulnerabilityAnalysisNormalizer extends BaseJsonNormalizer {
    normalize(data, options) {
        return {
            state: data.state,
            justification: data.justification,
            response: data.response.size > 0
                ? (options.sortLists ?? false
                    ? data.response.sorted()
                    : Array.from(data.response))
                : undefined,
            detail: data.detail
        };
    }
}
exports.VulnerabilityAnalysisNormalizer = VulnerabilityAnalysisNormalizer;
function normalizeStringableIter(data, options) {
    const r = Array.from(data, d => d.toString());
    if (options.sortLists ?? false) {
        r.sort((a, b) => a.localeCompare(b));
    }
    return r;
}


/***/ }),

/***/ "./src/serialize/json/types.ts":
/*!*************************************!*\
  !*** ./src/serialize/json/types.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JsonSchema = void 0;
var JsonSchema;
(function (JsonSchema) {
    function isIriReference(value) {
        return typeof value === 'string' &&
            value.length > 0;
    }
    JsonSchema.isIriReference = isIriReference;
    function isIdnEmail(value) {
        return typeof value === 'string' &&
            value.length > 0;
    }
    JsonSchema.isIdnEmail = isIdnEmail;
})(JsonSchema || (exports.JsonSchema = JsonSchema = {}));


/***/ }),

/***/ "./src/serialize/jsonSerializer.ts":
/*!*****************************************!*\
  !*** ./src/serialize/jsonSerializer.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JsonSerializer = void 0;
const enums_1 = __webpack_require__(/*! ../spec/enums */ "./src/spec/enums.ts");
const errors_1 = __webpack_require__(/*! ../spec/errors */ "./src/spec/errors.ts");
const baseSerializer_1 = __webpack_require__(/*! ./baseSerializer */ "./src/serialize/baseSerializer.ts");
class JsonSerializer extends baseSerializer_1.BaseSerializer {
    #normalizerFactory;
    constructor(normalizerFactory) {
        if (!normalizerFactory.spec.supportsFormat(enums_1.Format.JSON)) {
            throw new errors_1.UnsupportedFormatError('Spec does not support JSON format.');
        }
        super();
        this.#normalizerFactory = normalizerFactory;
    }
    get normalizerFactory() {
        return this.#normalizerFactory;
    }
    _normalize(bom, options = {}) {
        return this.#normalizerFactory.makeForBom()
            .normalize(bom, options);
    }
    _serialize(bom, { space } = {}) {
        return JSON.stringify(bom, null, space);
    }
}
exports.JsonSerializer = JsonSerializer;


/***/ }),

/***/ "./src/serialize/types.ts":
/*!********************************!*\
  !*** ./src/serialize/types.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./src/serialize/xml/_xsd.ts":
/*!***********************************!*\
  !*** ./src/serialize/xml/_xsd.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.normalizedString = normalizedString;
exports.token = token;
const _normalizeStringForbiddenSearch = /\r\n|\t|\n|\r/g;
const _normalizeStringForbiddenReplace = ' ';
function normalizedString(s) {
    return s.replace(_normalizeStringForbiddenSearch, _normalizeStringForbiddenReplace);
}
const _tokenMultispaceSearch = / {2,}/g;
const _tokenMultispaceReplace = ' ';
function token(s) {
    return normalizedString(s).trim().replace(_tokenMultispaceSearch, _tokenMultispaceReplace);
}


/***/ }),

/***/ "./src/serialize/xml/index.ts":
/*!************************************!*\
  !*** ./src/serialize/xml/index.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Types = exports.Normalize = void 0;
exports.Normalize = __importStar(__webpack_require__(/*! ./normalize */ "./src/serialize/xml/normalize.ts"));
exports.Types = __importStar(__webpack_require__(/*! ./types */ "./src/serialize/xml/types.ts"));


/***/ }),

/***/ "./src/serialize/xml/normalize.ts":
/*!****************************************!*\
  !*** ./src/serialize/xml/normalize.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VulnerabilityAffectedVersionNormalizer = exports.VulnerabilityAffectNormalizer = exports.VulnerabilityAnalysisNormalizer = exports.VulnerabilityCreditsNormalizer = exports.VulnerabilityAdvisoryNormalizer = exports.VulnerabilityRatingNormalizer = exports.VulnerabilityReferenceNormalizer = exports.VulnerabilitySourceNormalizer = exports.VulnerabilityNormalizer = exports.DependencyGraphNormalizer = exports.PropertyNormalizer = exports.AttachmentNormalizer = exports.ExternalReferenceNormalizer = exports.SWIDNormalizer = exports.LicenseNormalizer = exports.ComponentEvidenceNormalizer = exports.ServiceNormalizer = exports.ComponentNormalizer = exports.OrganizationalEntityNormalizer = exports.OrganizationalContactNormalizer = exports.HashNormalizer = exports.ToolsNormalizer = exports.ToolNormalizer = exports.LifecycleNormalizer = exports.MetadataNormalizer = exports.BomNormalizer = exports.Factory = void 0;
const iterable_1 = __webpack_require__(/*! ../../_helpers/iterable */ "./src/_helpers/iterable.ts");
const notUndefined_1 = __webpack_require__(/*! ../../_helpers/notUndefined */ "./src/_helpers/notUndefined.ts");
const tree_1 = __webpack_require__(/*! ../../_helpers/tree */ "./src/_helpers/tree.ts");
const uri_1 = __webpack_require__(/*! ../../_helpers/uri */ "./src/_helpers/uri.ts");
const models_1 = __webpack_require__(/*! ../../models */ "./src/models/index.ts");
const license_1 = __webpack_require__(/*! ../../models/license */ "./src/models/license.ts");
const lifecycle_1 = __webpack_require__(/*! ../../models/lifecycle */ "./src/models/lifecycle.ts");
const affect_1 = __webpack_require__(/*! ../../models/vulnerability/affect */ "./src/models/vulnerability/affect.ts");
const spdx_1 = __webpack_require__(/*! ../../spdx */ "./src/spdx.ts");
const enums_1 = __webpack_require__(/*! ../../spec/enums */ "./src/spec/enums.ts");
const _xsd_1 = __webpack_require__(/*! ./_xsd */ "./src/serialize/xml/_xsd.ts");
const types_1 = __webpack_require__(/*! ./types */ "./src/serialize/xml/types.ts");
class Factory {
    #spec;
    constructor(spec) {
        this.#spec = spec;
    }
    get spec() {
        return this.#spec;
    }
    makeForBom() {
        return new BomNormalizer(this);
    }
    makeForMetadata() {
        return new MetadataNormalizer(this);
    }
    makeForLifecycle() {
        return new LifecycleNormalizer(this);
    }
    makeForComponent() {
        return new ComponentNormalizer(this);
    }
    makeForService() {
        return new ServiceNormalizer(this);
    }
    makeForComponentEvidence() {
        return new ComponentEvidenceNormalizer(this);
    }
    makeForTool() {
        return new ToolNormalizer(this);
    }
    makeForTools() {
        return new ToolsNormalizer(this);
    }
    makeForOrganizationalContact() {
        return new OrganizationalContactNormalizer(this);
    }
    makeForOrganizationalEntity() {
        return new OrganizationalEntityNormalizer(this);
    }
    makeForHash() {
        return new HashNormalizer(this);
    }
    makeForLicense() {
        return new LicenseNormalizer(this);
    }
    makeForSWID() {
        return new SWIDNormalizer(this);
    }
    makeForExternalReference() {
        return new ExternalReferenceNormalizer(this);
    }
    makeForAttachment() {
        return new AttachmentNormalizer(this);
    }
    makeForProperty() {
        return new PropertyNormalizer(this);
    }
    makeForDependencyGraph() {
        return new DependencyGraphNormalizer(this);
    }
    makeForVulnerability() {
        return new VulnerabilityNormalizer(this);
    }
    makeForVulnerabilitySource() {
        return new VulnerabilitySourceNormalizer(this);
    }
    makeForVulnerabilityReference() {
        return new VulnerabilityReferenceNormalizer(this);
    }
    makeForVulnerabilityRating() {
        return new VulnerabilityRatingNormalizer(this);
    }
    makeForVulnerabilityAdvisory() {
        return new VulnerabilityAdvisoryNormalizer(this);
    }
    makeForVulnerabilityCredits() {
        return new VulnerabilityCreditsNormalizer(this);
    }
    makeForVulnerabilityAffect() {
        return new VulnerabilityAffectNormalizer(this);
    }
    makeForVulnerabilityAffectedVersion() {
        return new VulnerabilityAffectedVersionNormalizer(this);
    }
    makeForVulnerabilityAnalysis() {
        return new VulnerabilityAnalysisNormalizer(this);
    }
}
exports.Factory = Factory;
const xmlNamespace = new Map([
    [enums_1.Version.v1dot6, 'http://cyclonedx.org/schema/bom/1.6'],
    [enums_1.Version.v1dot5, 'http://cyclonedx.org/schema/bom/1.5'],
    [enums_1.Version.v1dot4, 'http://cyclonedx.org/schema/bom/1.4'],
    [enums_1.Version.v1dot3, 'http://cyclonedx.org/schema/bom/1.3'],
    [enums_1.Version.v1dot2, 'http://cyclonedx.org/schema/bom/1.2'],
    [enums_1.Version.v1dot1, 'http://cyclonedx.org/schema/bom/1.1'],
    [enums_1.Version.v1dot0, 'http://cyclonedx.org/schema/bom/1.0']
]);
class BaseXmlNormalizer {
    _factory;
    constructor(factory) {
        this._factory = factory;
    }
    get factory() {
        return this._factory;
    }
}
class BomNormalizer extends BaseXmlNormalizer {
    normalize(data, options) {
        const components = {
            type: 'element',
            name: 'components',
            children: data.components.size > 0
                ? this._factory.makeForComponent().normalizeIterable(data.components, options, 'component')
                : undefined
        };
        const services = this._factory.spec.supportsServices && data.services.size > 0
            ? {
                type: 'element',
                name: 'services',
                children: this._factory.makeForService().normalizeIterable(data.services, options, 'service')
            }
            : undefined;
        const vulnerabilities = this._factory.spec.supportsVulnerabilities && data.vulnerabilities.size > 0
            ? {
                type: 'element',
                name: 'vulnerabilities',
                children: this._factory.makeForVulnerability().normalizeIterable(data.vulnerabilities, options, 'vulnerability')
            }
            : undefined;
        return {
            type: 'element',
            name: 'bom',
            namespace: xmlNamespace.get(this._factory.spec.version),
            attributes: {
                version: data.version,
                serialNumber: this.#isEligibleSerialNumber(data.serialNumber)
                    ? data.serialNumber
                    : undefined
            },
            children: [
                this._factory.makeForMetadata().normalize(data.metadata, options, 'metadata'),
                components,
                services,
                this._factory.spec.supportsDependencyGraph
                    ? this._factory.makeForDependencyGraph().normalize(data, options, 'dependencies')
                    : undefined,
                vulnerabilities
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    #isEligibleSerialNumber(v) {
        return v !== undefined &&
            /^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$|^\{[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\}$/.test(v);
    }
}
exports.BomNormalizer = BomNormalizer;
class MetadataNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const orgEntityNormalizer = this._factory.makeForOrganizationalEntity();
        const lifecycles = this._factory.spec.supportsMetadataLifecycles && data.lifecycles.size > 0
            ? {
                type: 'element',
                name: 'lifecycles',
                children: this._factory.makeForLifecycle().normalizeIterable(data.lifecycles, options, 'lifecycle')
            }
            : undefined;
        const tools = data.tools.size > 0
            ? this._factory.makeForTools().normalize(data.tools, options, 'tools')
            : undefined;
        const authors = data.authors.size > 0
            ? {
                type: 'element',
                name: 'authors',
                children: this._factory.makeForOrganizationalContact().normalizeIterable(data.authors, options, 'author')
            }
            : undefined;
        const licenses = this._factory.spec.supportsMetadataLicenses && data.licenses.size > 0
            ? {
                type: 'element',
                name: 'licenses',
                children: this._factory.makeForLicense().normalizeIterable(data.licenses, options)
            }
            : undefined;
        const properties = this._factory.spec.supportsMetadataProperties && data.properties.size > 0
            ? {
                type: 'element',
                name: 'properties',
                children: this._factory.makeForProperty().normalizeIterable(data.properties, options, 'property')
            }
            : undefined;
        return {
            type: 'element',
            name: elementName,
            children: [
                makeOptionalDateTimeElement(data.timestamp, 'timestamp'),
                lifecycles,
                tools,
                authors,
                data.component === undefined
                    ? undefined
                    : this._factory.makeForComponent().normalize(data.component, options, 'component'),
                data.manufacture === undefined
                    ? undefined
                    : orgEntityNormalizer.normalize(data.manufacture, options, 'manufacture'),
                data.supplier === undefined
                    ? undefined
                    : orgEntityNormalizer.normalize(data.supplier, options, 'supplier'),
                licenses,
                properties
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
}
exports.MetadataNormalizer = MetadataNormalizer;
class LifecycleNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        return data instanceof lifecycle_1.NamedLifecycle
            ? {
                type: 'element',
                name: elementName,
                children: [
                    makeTextElement(data.name, 'name', _xsd_1.normalizedString),
                    makeOptionalTextElement(data.description, 'description')
                ].filter(notUndefined_1.isNotUndefined)
            }
            : {
                type: 'element',
                name: elementName,
                children: [
                    makeTextElement(data, 'phase')
                ]
            };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(t => this.normalize(t, options, elementName));
    }
}
exports.LifecycleNormalizer = LifecycleNormalizer;
class ToolNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const hashes = data.hashes.size > 0
            ? {
                type: 'element',
                name: 'hashes',
                children: this._factory.makeForHash().normalizeIterable(data.hashes, options, 'hash')
            }
            : undefined;
        const externalReferences = this._factory.spec.supportsToolReferences && data.externalReferences.size > 0
            ? {
                type: 'element',
                name: 'externalReferences',
                children: this._factory.makeForExternalReference().normalizeIterable(data.externalReferences, options, 'reference')
            }
            : undefined;
        return {
            type: 'element',
            name: elementName,
            children: [
                makeOptionalTextElement(data.vendor, 'vendor', _xsd_1.normalizedString),
                makeOptionalTextElement(data.name, 'name', _xsd_1.normalizedString),
                makeOptionalTextElement(data.version, 'version', _xsd_1.normalizedString),
                hashes,
                externalReferences
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(t => this.normalize(t, options, elementName));
    }
}
exports.ToolNormalizer = ToolNormalizer;
class ToolsNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        let children = [];
        if (data.tools.size > 0 || !this._factory.spec.supportsToolsComponentsServices) {
            children = this._factory.makeForTool().normalizeIterable(new models_1.ToolRepository((0, iterable_1.chainI)(Array.from(data.components, models_1.Tool.fromComponent), Array.from(data.services, models_1.Tool.fromService), data.tools)), options, 'tool');
        }
        else {
            if (data.components.size > 0) {
                children.push({
                    type: 'element',
                    name: 'components',
                    children: this._factory.makeForComponent().normalizeIterable(data.components, options, 'component')
                });
            }
            if (data.services.size > 0) {
                children.push({
                    type: 'element',
                    name: 'services',
                    children: this._factory.makeForService().normalizeIterable(data.services, options, 'service')
                });
            }
        }
        return {
            type: 'element',
            name: elementName,
            children
        };
    }
}
exports.ToolsNormalizer = ToolsNormalizer;
class HashNormalizer extends BaseXmlNormalizer {
    normalize([algorithm, content], options, elementName) {
        const spec = this._factory.spec;
        return spec.supportsHashAlgorithm(algorithm) && spec.supportsHashValue(content)
            ? {
                type: 'element',
                name: elementName,
                attributes: { alg: algorithm },
                children: (0, _xsd_1.token)(content)
            }
            : undefined;
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(h => this.normalize(h, options, elementName)).filter(notUndefined_1.isNotUndefined);
    }
}
exports.HashNormalizer = HashNormalizer;
class OrganizationalContactNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        return {
            type: 'element',
            name: elementName,
            children: [
                makeOptionalTextElement(data.name, 'name', _xsd_1.normalizedString),
                makeOptionalTextElement(data.email, 'email', _xsd_1.normalizedString),
                makeOptionalTextElement(data.phone, 'phone', _xsd_1.normalizedString)
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(oc => this.normalize(oc, options, elementName));
    }
}
exports.OrganizationalContactNormalizer = OrganizationalContactNormalizer;
class OrganizationalEntityNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        return {
            type: 'element',
            name: elementName,
            children: [
                makeOptionalTextElement(data.name, 'name', _xsd_1.normalizedString),
                ...makeTextElementIter(Array.from(data.url, (s) => (0, uri_1.escapeUri)(s.toString())), options, 'url').filter(({ children: u }) => types_1.XmlSchema.isAnyURI(u)),
                ...this._factory.makeForOrganizationalContact().normalizeIterable(data.contact, options, 'contact')
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(oe => this.normalize(oe, options, elementName));
    }
}
exports.OrganizationalEntityNormalizer = OrganizationalEntityNormalizer;
class ComponentNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const spec = this._factory.spec;
        if (!spec.supportsComponentType(data.type)) {
            return undefined;
        }
        const supplier = data.supplier === undefined
            ? undefined
            : this._factory.makeForOrganizationalEntity().normalize(data.supplier, options, 'supplier');
        const version = (spec.requiresComponentVersion
            ? makeTextElement
            : makeOptionalTextElement)(data.version ?? '', 'version', _xsd_1.normalizedString);
        const hashes = data.hashes.size > 0
            ? {
                type: 'element',
                name: 'hashes',
                children: this._factory.makeForHash().normalizeIterable(data.hashes, options, 'hash')
            }
            : undefined;
        const licenses = data.licenses.size > 0
            ? {
                type: 'element',
                name: 'licenses',
                children: this._factory.makeForLicense().normalizeIterable(data.licenses, options)
            }
            : undefined;
        const swid = data.swid === undefined
            ? undefined
            : this._factory.makeForSWID().normalize(data.swid, options, 'swid');
        const extRefs = data.externalReferences.size > 0
            ? {
                type: 'element',
                name: 'externalReferences',
                children: this._factory.makeForExternalReference().normalizeIterable(data.externalReferences, options, 'reference')
            }
            : undefined;
        const properties = spec.supportsProperties(data) && data.properties.size > 0
            ? {
                type: 'element',
                name: 'properties',
                children: this._factory.makeForProperty().normalizeIterable(data.properties, options, 'property')
            }
            : undefined;
        const components = data.components.size > 0
            ? {
                type: 'element',
                name: 'components',
                children: this.normalizeIterable(data.components, options, 'component')
            }
            : undefined;
        const evidence = spec.supportsComponentEvidence && data.evidence !== undefined
            ? this._factory.makeForComponentEvidence().normalize(data.evidence, options, 'evidence')
            : undefined;
        return {
            type: 'element',
            name: elementName,
            attributes: {
                type: data.type,
                'bom-ref': data.bomRef.value
            },
            children: [
                supplier,
                makeOptionalTextElement(data.author, 'author', _xsd_1.normalizedString),
                makeOptionalTextElement(data.publisher, 'publisher', _xsd_1.normalizedString),
                makeOptionalTextElement(data.group, 'group', _xsd_1.normalizedString),
                makeTextElement(data.name, 'name', _xsd_1.normalizedString),
                version,
                makeOptionalTextElement(data.description, 'description', _xsd_1.normalizedString),
                makeOptionalTextElement(data.scope, 'scope'),
                hashes,
                licenses,
                makeOptionalTextElement(data.copyright, 'copyright', _xsd_1.normalizedString),
                makeOptionalTextElement(data.cpe, 'cpe'),
                makeOptionalTextElement(data.purl, 'purl'),
                swid,
                extRefs,
                properties,
                components,
                evidence
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(c => this.normalize(c, options, elementName)).filter(notUndefined_1.isNotUndefined);
    }
}
exports.ComponentNormalizer = ComponentNormalizer;
class ServiceNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const spec = this._factory.spec;
        const provider = data.provider === undefined
            ? undefined
            : this._factory.makeForOrganizationalEntity().normalize(data.provider, options, 'provider');
        const licenses = data.licenses.size > 0
            ? {
                type: 'element',
                name: 'licenses',
                children: this._factory.makeForLicense().normalizeIterable(data.licenses, options)
            }
            : undefined;
        const extRefs = data.externalReferences.size > 0
            ? {
                type: 'element',
                name: 'externalReferences',
                children: this._factory.makeForExternalReference().normalizeIterable(data.externalReferences, options, 'reference')
            }
            : undefined;
        const properties = spec.supportsProperties(data) && data.properties.size > 0
            ? {
                type: 'element',
                name: 'properties',
                children: this._factory.makeForProperty().normalizeIterable(data.properties, options, 'property')
            }
            : undefined;
        const services = data.services.size > 0
            ? {
                type: 'element',
                name: 'services',
                children: this.normalizeIterable(data.services, options, 'service')
            }
            : undefined;
        return {
            type: 'element',
            name: elementName,
            attributes: {
                'bom-ref': data.bomRef.value
            },
            children: [
                provider,
                makeOptionalTextElement(data.group, 'group', _xsd_1.normalizedString),
                makeTextElement(data.name, 'name', _xsd_1.normalizedString),
                makeOptionalTextElement(data.version, 'version', _xsd_1.normalizedString),
                makeOptionalTextElement(data.description, 'description', _xsd_1.normalizedString),
                licenses,
                extRefs,
                properties,
                services,
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(s => this.normalize(s, options, elementName));
    }
}
exports.ServiceNormalizer = ServiceNormalizer;
class ComponentEvidenceNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const licenses = data.licenses.size > 0
            ? {
                type: 'element',
                name: 'licenses',
                children: this._factory.makeForLicense().normalizeIterable(data.licenses, options)
            }
            : undefined;
        const copyright = data.copyright.size > 0
            ? {
                type: 'element',
                name: 'copyright',
                children: makeTextElementIter(data.copyright, options, 'text')
            }
            : undefined;
        return {
            type: 'element',
            name: elementName,
            children: [
                licenses,
                copyright
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
}
exports.ComponentEvidenceNormalizer = ComponentEvidenceNormalizer;
class LicenseNormalizer extends BaseXmlNormalizer {
    normalize(data, options) {
        switch (true) {
            case data instanceof license_1.NamedLicense:
                return this.#normalizeNamedLicense(data, options);
            case data instanceof license_1.SpdxLicense:
                return (0, spdx_1.isSupportedSpdxId)(data.id)
                    ? this.#normalizeSpdxLicense(data, options)
                    : this.#normalizeNamedLicense(new license_1.NamedLicense(data.id, { url: data.url }), options);
            case data instanceof license_1.LicenseExpression:
                return this.#normalizeLicenseExpression(data);
            default:
                throw new TypeError('Unexpected LicenseChoice');
        }
    }
    #normalizeNamedLicense(data, options) {
        const url = (0, uri_1.escapeUri)(data.url?.toString());
        return {
            type: 'element',
            name: 'license',
            attributes: {
                acknowledgement: this._factory.spec.supportsLicenseAcknowledgement
                    ? data.acknowledgement
                    : undefined
            },
            children: [
                makeTextElement(data.name, 'name', _xsd_1.normalizedString),
                data.text === undefined
                    ? undefined
                    : this._factory.makeForAttachment().normalize(data.text, options, 'text'),
                types_1.XmlSchema.isAnyURI(url)
                    ? makeTextElement(url, 'url')
                    : undefined
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    #normalizeSpdxLicense(data, options) {
        const url = (0, uri_1.escapeUri)(data.url?.toString());
        return {
            type: 'element',
            name: 'license',
            attributes: {
                acknowledgement: this._factory.spec.supportsLicenseAcknowledgement
                    ? data.acknowledgement
                    : undefined
            },
            children: [
                makeTextElement(data.id, 'id'),
                data.text === undefined
                    ? undefined
                    : this._factory.makeForAttachment().normalize(data.text, options, 'text'),
                types_1.XmlSchema.isAnyURI(url)
                    ? makeTextElement(url, 'url')
                    : undefined
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    #normalizeLicenseExpression(data) {
        const elem = makeTextElement(data.expression, 'expression', _xsd_1.normalizedString);
        elem.attributes = {
            acknowledgement: this._factory.spec.supportsLicenseAcknowledgement
                ? data.acknowledgement
                : undefined
        };
        return elem;
    }
    normalizeIterable(data, options) {
        const licenses = options.sortLists ?? false
            ? data.sorted()
            : Array.from(data);
        if (licenses.length > 1) {
            const expressions = licenses.filter(l => l instanceof license_1.LicenseExpression);
            if (expressions.length > 0) {
                return [this.#normalizeLicenseExpression(expressions[0])];
            }
        }
        return licenses.map(l => this.normalize(l, options));
    }
}
exports.LicenseNormalizer = LicenseNormalizer;
class SWIDNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const url = (0, uri_1.escapeUri)(data.url?.toString());
        return {
            type: 'element',
            name: elementName,
            attributes: {
                tagId: data.tagId,
                name: data.name,
                version: data.version || undefined,
                tagVersion: data.tagVersion,
                patch: data.patch === undefined
                    ? undefined
                    : (data.patch ? 'true' : 'false')
            },
            children: [
                data.text === undefined
                    ? undefined
                    : this._factory.makeForAttachment().normalize(data.text, options, 'text'),
                types_1.XmlSchema.isAnyURI(url)
                    ? makeTextElement(url, 'url')
                    : undefined
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
}
exports.SWIDNormalizer = SWIDNormalizer;
class ExternalReferenceNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const url = (0, uri_1.escapeUri)(data.url.toString());
        const hashes = this._factory.spec.supportsExternalReferenceHashes && data.hashes.size > 0
            ? {
                type: 'element',
                name: 'hashes',
                children: this._factory.makeForHash().normalizeIterable(data.hashes, options, 'hash')
            }
            : undefined;
        return this._factory.spec.supportsExternalReferenceType(data.type) &&
            types_1.XmlSchema.isAnyURI(url)
            ? {
                type: 'element',
                name: elementName,
                attributes: {
                    type: data.type
                },
                children: [
                    makeTextElement(url, 'url'),
                    makeOptionalTextElement(data.comment, 'comment'),
                    hashes
                ].filter(notUndefined_1.isNotUndefined)
            }
            : undefined;
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(r => this.normalize(r, options, elementName)).filter(notUndefined_1.isNotUndefined);
    }
}
exports.ExternalReferenceNormalizer = ExternalReferenceNormalizer;
class AttachmentNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        return {
            type: 'element',
            name: elementName,
            attributes: {
                'content-type': data.contentType
                    ? (0, _xsd_1.normalizedString)(data.contentType)
                    : undefined,
                encoding: data.encoding || undefined
            },
            children: data.content.toString()
        };
    }
}
exports.AttachmentNormalizer = AttachmentNormalizer;
class PropertyNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        return {
            type: 'element',
            name: elementName,
            attributes: {
                name: data.name
            },
            children: (0, _xsd_1.normalizedString)(data.value)
        };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(p => this.normalize(p, options, elementName));
    }
}
exports.PropertyNormalizer = PropertyNormalizer;
class DependencyGraphNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const allRefs = new Map();
        if (data.metadata.component !== undefined) {
            allRefs.set(data.metadata.component.bomRef, data.metadata.component.dependencies);
            for (const component of data.metadata.component.components[tree_1.treeIteratorSymbol]()) {
                allRefs.set(component.bomRef, component.dependencies);
            }
        }
        for (const component of data.components[tree_1.treeIteratorSymbol]()) {
            allRefs.set(component.bomRef, component.dependencies);
        }
        for (const service of data.services[tree_1.treeIteratorSymbol]()) {
            allRefs.set(service.bomRef, service.dependencies);
        }
        const normalized = [];
        for (const [ref, deps] of allRefs) {
            const dep = this.#normalizeDependency(ref, deps, allRefs, options);
            if ((0, notUndefined_1.isNotUndefined)(dep)) {
                normalized.push(dep);
            }
        }
        if (options.sortLists ?? false) {
            normalized.sort(({ attributes: { ref: a } }, { attributes: { ref: b } }) => a.localeCompare(b));
        }
        return {
            type: 'element',
            name: elementName,
            children: normalized
        };
    }
    #normalizeDependency(ref, deps, allRefs, options) {
        const bomRef = ref.toString();
        if (bomRef.length === 0) {
            return undefined;
        }
        const dependsOn = Array.from(deps).filter(d => allRefs.has(d) && d !== ref)
            .map(d => d.toString()).filter(d => d.length > 0);
        if (options.sortLists ?? false) {
            dependsOn.sort((a, b) => a.localeCompare(b));
        }
        return {
            type: 'element',
            name: 'dependency',
            attributes: { ref: bomRef },
            children: dependsOn.map(d => ({
                type: 'element',
                name: 'dependency',
                attributes: { ref: d }
            }))
        };
    }
}
exports.DependencyGraphNormalizer = DependencyGraphNormalizer;
class VulnerabilityNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const references = data.references.size > 0
            ? {
                type: 'element',
                name: 'references',
                children: this._factory.makeForVulnerabilityReference().normalizeIterable(data.references, options, 'reference')
            }
            : undefined;
        const ratings = data.ratings.size > 0
            ? {
                type: 'element',
                name: 'ratings',
                children: this._factory.makeForVulnerabilityRating().normalizeIterable(data.ratings, options, 'rating')
            }
            : undefined;
        const cwes = data.cwes.size > 0
            ? {
                type: 'element',
                name: 'cwes',
                children: (options.sortLists
                    ? data.cwes.sorted()
                    : Array.from(data.cwes)).map(cwe => makeTextElement(cwe, 'cwe'))
            }
            : undefined;
        const advisories = data.advisories.size > 0
            ? {
                type: 'element',
                name: 'advisories',
                children: this._factory.makeForVulnerabilityAdvisory().normalizeIterable(data.advisories, options, 'advisory')
            }
            : undefined;
        const tools = data.tools.size > 0
            ? this._factory.makeForTools().normalize(data.tools, options, 'tools')
            : undefined;
        const affects = data.affects.size > 0
            ? {
                type: 'element',
                name: 'affects',
                children: this._factory.makeForVulnerabilityAffect().normalizeIterable(data.affects, options, 'target')
            }
            : undefined;
        const properties = data.properties.size > 0
            ? {
                type: 'element',
                name: 'properties',
                children: this._factory.makeForProperty().normalizeIterable(data.properties, options, 'property')
            }
            : undefined;
        return {
            type: 'element',
            name: elementName,
            attributes: { 'bom-ref': data.bomRef.value || undefined },
            children: [
                makeOptionalTextElement(data.id, 'id', _xsd_1.normalizedString),
                data.source === undefined
                    ? undefined
                    : this._factory.makeForVulnerabilitySource().normalize(data.source, options, 'source'),
                references,
                ratings,
                cwes,
                makeOptionalTextElement(data.description, 'description'),
                makeOptionalTextElement(data.detail, 'detail'),
                makeOptionalTextElement(data.recommendation, 'recommendation'),
                advisories,
                makeOptionalDateTimeElement(data.created, 'created'),
                makeOptionalDateTimeElement(data.created, 'published'),
                makeOptionalDateTimeElement(data.created, 'updated'),
                data.credits === undefined
                    ? undefined
                    : this._factory.makeForVulnerabilityCredits().normalize(data.credits, options, 'credits'),
                tools,
                data.analysis === undefined
                    ? undefined
                    : this._factory.makeForVulnerabilityAnalysis().normalize(data.analysis, options, 'analysis'),
                affects,
                properties
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(v => this.normalize(v, options, elementName));
    }
}
exports.VulnerabilityNormalizer = VulnerabilityNormalizer;
class VulnerabilitySourceNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const url = (0, uri_1.escapeUri)(data.url?.toString());
        return {
            type: 'element',
            name: elementName,
            children: [
                makeOptionalTextElement(data.name, 'name', _xsd_1.normalizedString),
                types_1.XmlSchema.isAnyURI(url)
                    ? makeTextElement(url, 'url')
                    : undefined
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
}
exports.VulnerabilitySourceNormalizer = VulnerabilitySourceNormalizer;
class VulnerabilityReferenceNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        return {
            type: 'element',
            name: elementName,
            children: [
                makeTextElement(data.id, 'id'),
                this._factory.makeForVulnerabilitySource().normalize(data.source, options, 'source')
            ]
        };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(r => this.normalize(r, options, elementName));
    }
}
exports.VulnerabilityReferenceNormalizer = VulnerabilityReferenceNormalizer;
class VulnerabilityRatingNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        return {
            type: 'element',
            name: elementName,
            children: [
                data.source === undefined
                    ? undefined
                    : this._factory.makeForVulnerabilitySource().normalize(data.source, options, 'source'),
                makeOptionalTextElement(data.score, 'score'),
                makeOptionalTextElement(data.severity, 'severity'),
                this._factory.spec.supportsVulnerabilityRatingMethod(data.method)
                    ? makeOptionalTextElement(data.method, 'method')
                    : undefined,
                makeOptionalTextElement(data.vector, 'vector', _xsd_1.normalizedString),
                makeOptionalTextElement(data.justification, 'justification')
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(r => this.normalize(r, options, elementName));
    }
}
exports.VulnerabilityRatingNormalizer = VulnerabilityRatingNormalizer;
class VulnerabilityAdvisoryNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const url = (0, uri_1.escapeUri)(data.url.toString());
        if (!types_1.XmlSchema.isAnyURI(url)) {
            return undefined;
        }
        return {
            type: 'element',
            name: elementName,
            children: [
                makeOptionalTextElement(data.title, 'title'),
                makeTextElement(url, 'url')
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(a => this.normalize(a, options, elementName)).filter(notUndefined_1.isNotUndefined);
    }
}
exports.VulnerabilityAdvisoryNormalizer = VulnerabilityAdvisoryNormalizer;
class VulnerabilityCreditsNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const organizations = data.organizations.size > 0
            ? {
                type: 'element',
                name: 'organizations',
                children: this._factory.makeForOrganizationalEntity().normalizeIterable(data.organizations, options, 'organization')
            }
            : undefined;
        const individuals = data.individuals.size > 0
            ? {
                type: 'element',
                name: 'individuals',
                children: this._factory.makeForOrganizationalContact().normalizeIterable(data.individuals, options, 'individual')
            }
            : undefined;
        return {
            type: 'element',
            name: elementName,
            children: [
                organizations,
                individuals
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
}
exports.VulnerabilityCreditsNormalizer = VulnerabilityCreditsNormalizer;
class VulnerabilityAnalysisNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const responses = data.response.size > 0
            ? {
                type: 'element',
                name: 'responses',
                children: (options.sortLists ?? false
                    ? data.response.sorted()
                    : Array.from(data.response)).map(ar => makeTextElement(ar, 'response'))
            }
            : undefined;
        return {
            type: 'element',
            name: elementName,
            children: [
                makeOptionalTextElement(data.state, 'state'),
                makeOptionalTextElement(data.justification, 'justification'),
                responses,
                makeOptionalTextElement(data.detail, 'detail')
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
}
exports.VulnerabilityAnalysisNormalizer = VulnerabilityAnalysisNormalizer;
class VulnerabilityAffectNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        const versions = data.versions.size > 0
            ? {
                type: 'element',
                name: 'versions',
                children: this._factory.makeForVulnerabilityAffectedVersion().normalizeIterable(data.versions, options, 'version')
            }
            : undefined;
        return {
            type: 'element',
            name: elementName,
            children: [
                makeTextElement(data.ref, 'ref'),
                versions
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(a => this.normalize(a, options, elementName));
    }
}
exports.VulnerabilityAffectNormalizer = VulnerabilityAffectNormalizer;
class VulnerabilityAffectedVersionNormalizer extends BaseXmlNormalizer {
    normalize(data, options, elementName) {
        switch (true) {
            case data instanceof affect_1.AffectedSingleVersion:
                return this.#normalizeAffectedSingleVersion(data, elementName);
            case data instanceof affect_1.AffectedVersionRange:
                return this.#normalizeAffectedVersionRange(data, elementName);
            default:
                throw new TypeError('Unexpected Vulnerability AffectedVersion');
        }
    }
    #normalizeAffectedSingleVersion(data, elementName) {
        return {
            type: 'element',
            name: elementName,
            children: [
                makeTextElement(data.version, 'version', _xsd_1.normalizedString),
                makeOptionalTextElement(data.status, 'status')
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    #normalizeAffectedVersionRange(data, elementName) {
        return {
            type: 'element',
            name: elementName,
            children: [
                makeTextElement(data.range, 'range', _xsd_1.normalizedString),
                makeOptionalTextElement(data.status, 'status')
            ].filter(notUndefined_1.isNotUndefined)
        };
    }
    normalizeIterable(data, options, elementName) {
        return (options.sortLists ?? false
            ? data.sorted()
            : Array.from(data)).map(av => this.normalize(av, options, elementName));
    }
}
exports.VulnerabilityAffectedVersionNormalizer = VulnerabilityAffectedVersionNormalizer;
const noTEM = (s) => s;
function makeOptionalTextElement(data, elementName, mod = noTEM) {
    const s = mod(data?.toString() ?? '');
    return s.length > 0
        ? makeTextElement(s, elementName)
        : undefined;
}
function makeTextElement(data, elementName, mod = noTEM) {
    return {
        type: 'element',
        name: elementName,
        children: mod(data.toString())
    };
}
function makeTextElementIter(data, options, elementName, mod = noTEM) {
    const r = Array.from(data, d => makeTextElement(d, elementName, mod));
    if (options.sortLists ?? false) {
        r.sort(({ children: a }, { children: b }) => a.localeCompare(b));
    }
    return r;
}
function makeOptionalDateTimeElement(data, elementName, mod = noTEM) {
    const d = data?.toISOString();
    return d === undefined
        ? undefined
        : makeTextElement(d, elementName, mod);
}


/***/ }),

/***/ "./src/serialize/xml/types.ts":
/*!************************************!*\
  !*** ./src/serialize/xml/types.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.XmlSchema = void 0;
var XmlSchema;
(function (XmlSchema) {
    const _AnyUriSchemePattern = /^[a-z][a-z0-9+\-.]*$/i;
    function isAnyURI(value) {
        if (typeof value !== 'string') {
            return false;
        }
        if (value.length === 0) {
            return false;
        }
        const fragmentPos = value.indexOf('#');
        let beforeFragment = value;
        if (fragmentPos >= 0) {
            if (value.includes('#', fragmentPos + 1)) {
                return false;
            }
            beforeFragment = value.slice(undefined, fragmentPos);
        }
        const schemePos = beforeFragment.indexOf(':');
        if (schemePos >= 0) {
            if (!_AnyUriSchemePattern.test(beforeFragment.slice(undefined, schemePos))) {
                return false;
            }
        }
        return true;
    }
    XmlSchema.isAnyURI = isAnyURI;
})(XmlSchema || (exports.XmlSchema = XmlSchema = {}));


/***/ }),

/***/ "./src/serialize/xmlBaseSerializer.ts":
/*!********************************************!*\
  !*** ./src/serialize/xmlBaseSerializer.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.XmlBaseSerializer = void 0;
const enums_1 = __webpack_require__(/*! ../spec/enums */ "./src/spec/enums.ts");
const errors_1 = __webpack_require__(/*! ../spec/errors */ "./src/spec/errors.ts");
const baseSerializer_1 = __webpack_require__(/*! ./baseSerializer */ "./src/serialize/baseSerializer.ts");
class XmlBaseSerializer extends baseSerializer_1.BaseSerializer {
    #normalizerFactory;
    constructor(normalizerFactory) {
        if (!normalizerFactory.spec.supportsFormat(enums_1.Format.XML)) {
            throw new errors_1.UnsupportedFormatError('Spec does not support XML format.');
        }
        super();
        this.#normalizerFactory = normalizerFactory;
    }
    get normalizerFactory() {
        return this.#normalizerFactory;
    }
    _normalize(bom, options = {}) {
        return this.#normalizerFactory.makeForBom()
            .normalize(bom, options);
    }
}
exports.XmlBaseSerializer = XmlBaseSerializer;


/***/ }),

/***/ "./src/serialize/xmlSerializer.web.ts":
/*!********************************************!*\
  !*** ./src/serialize/xmlSerializer.web.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.XmlSerializer = void 0;
const notUndefined_1 = __webpack_require__(/*! ../_helpers/notUndefined */ "./src/_helpers/notUndefined.ts");
const xmlBaseSerializer_1 = __webpack_require__(/*! ./xmlBaseSerializer */ "./src/serialize/xmlBaseSerializer.ts");
class XmlSerializer extends xmlBaseSerializer_1.XmlBaseSerializer {
    _serialize(normalizedBom, { space } = {}) {
        const doc = this.#buildXmlDocument(normalizedBom);
        return (new XMLSerializer()).serializeToString(doc);
    }
    #buildXmlDocument(rootElement) {
        const namespace = null;
        const doc = document.implementation.createDocument(namespace, null);
        doc.appendChild(this.#buildElement(rootElement, doc, namespace));
        return doc;
    }
    #getNS(element) {
        const ns = (element.namespace ?? element.attributes?.xmlns)?.toString() ?? '';
        return ns.length > 0
            ? ns
            : null;
    }
    #buildElement(element, doc, parentNS) {
        const ns = this.#getNS(element) ?? parentNS;
        const node = doc.createElementNS(ns, element.name);
        if ((0, notUndefined_1.isNotUndefined)(element.attributes)) {
            this.#setAttributes(node, element.attributes);
        }
        if ((0, notUndefined_1.isNotUndefined)(element.children)) {
            this.#addChildren(node, element.children, ns);
        }
        return node;
    }
    #setAttributes(node, attributes) {
        for (const [name, value] of Object.entries(attributes)) {
            if ((0, notUndefined_1.isNotUndefined)(value) && name !== 'xmlns') {
                node.setAttribute(name, `${value}`);
            }
        }
    }
    #addChildren(node, children, parentNS = null) {
        if (children === undefined) {
            return;
        }
        if (typeof children === 'string' || typeof children === 'number') {
            node.textContent = children.toString();
            return;
        }
        const doc = node.ownerDocument;
        for (const child of children) {
            if (child.type === 'element') {
                node.appendChild(this.#buildElement(child, doc, parentNS));
            }
        }
    }
}
exports.XmlSerializer = XmlSerializer;


/***/ }),

/***/ "./src/spdx.ts":
/*!*********************!*\
  !*** ./src/spdx.ts ***!
  \*********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSupportedSpdxId = isSupportedSpdxId;
exports.fixupSpdxId = fixupSpdxId;
exports.isValidSpdxLicenseExpression = isValidSpdxLicenseExpression;
const spdx_expression_parse_1 = __importDefault(__webpack_require__(/*! spdx-expression-parse */ "spdx-expression-parse"));
const spdx_SNAPSHOT_schema_json_1 = __webpack_require__(/*! ../res/schema/spdx.SNAPSHOT.schema.json */ "./res/schema/spdx.SNAPSHOT.schema.json");
const spdxIds = new Set(spdx_SNAPSHOT_schema_json_1.enum);
const spdxLowerToActual = Object.freeze(Object.fromEntries(spdx_SNAPSHOT_schema_json_1.enum.map(spdxId => [spdxId.toLowerCase(), spdxId])));
function isSupportedSpdxId(value) {
    return spdxIds.has(value);
}
function fixupSpdxId(value) {
    return typeof value === 'string' && value.length > 0
        ? spdxLowerToActual[value.toLowerCase()]
        : undefined;
}
function isValidSpdxLicenseExpression(value) {
    if (typeof value !== 'string') {
        return false;
    }
    try {
        (0, spdx_expression_parse_1.default)(value);
    }
    catch (err) {
        return false;
    }
    return true;
}


/***/ }),

/***/ "./src/spec/_protocol.ts":
/*!*******************************!*\
  !*** ./src/spec/_protocol.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports._Spec = void 0;
class _Spec {
    #version;
    #formats;
    #componentTypes;
    #hashAlgorithms;
    #hashValuePattern;
    #externalReferenceTypes;
    #vulnerabilityRatingMethods;
    #supportsDependencyGraph;
    #supportsToolReferences;
    #requiresComponentVersion;
    #supportsProperties;
    #supportsVulnerabilities;
    #supportsComponentEvidence;
    #supportsMetadataLifecycles;
    #supportsMetadataLicenses;
    #supportsMetadataProperties;
    #supportsExternalReferenceHashes;
    #supportsLicenseAcknowledgement;
    #supportsServices;
    #supportsToolsComponentsServices;
    constructor(version, formats, componentTypes, hashAlgorithms, hashValuePattern, externalReferenceTypes, supportsDependencyGraph, supportsToolReferences, requiresComponentVersion, supportsProperties, supportsVulnerabilities, vulnerabilityRatingMethods, supportsComponentEvidence, supportsMetadataLifecycles, supportsMetadataLicenses, supportsMetadataProperties, supportsExternalReferenceHashes, supportsLicenseAcknowledgement, supportsServices, supportsToolsComponentsServices) {
        this.#version = version;
        this.#formats = new Set(formats);
        this.#componentTypes = new Set(componentTypes);
        this.#hashAlgorithms = new Set(hashAlgorithms);
        this.#hashValuePattern = hashValuePattern;
        this.#externalReferenceTypes = new Set(externalReferenceTypes);
        this.#supportsDependencyGraph = supportsDependencyGraph;
        this.#supportsToolReferences = supportsToolReferences;
        this.#requiresComponentVersion = requiresComponentVersion;
        this.#supportsProperties = supportsProperties;
        this.#supportsVulnerabilities = supportsVulnerabilities;
        this.#vulnerabilityRatingMethods = new Set(vulnerabilityRatingMethods);
        this.#supportsComponentEvidence = supportsComponentEvidence;
        this.#supportsMetadataLifecycles = supportsMetadataLifecycles;
        this.#supportsMetadataLicenses = supportsMetadataLicenses;
        this.#supportsMetadataProperties = supportsMetadataProperties;
        this.#supportsExternalReferenceHashes = supportsExternalReferenceHashes;
        this.#supportsLicenseAcknowledgement = supportsLicenseAcknowledgement;
        this.#supportsServices = supportsServices;
        this.#supportsToolsComponentsServices = supportsToolsComponentsServices;
    }
    get version() {
        return this.#version;
    }
    supportsFormat(f) {
        return this.#formats.has(f);
    }
    supportsComponentType(ct) {
        return this.#componentTypes.has(ct);
    }
    supportsHashAlgorithm(ha) {
        return this.#hashAlgorithms.has(ha);
    }
    supportsHashValue(hv) {
        return typeof hv === 'string' &&
            this.#hashValuePattern.test(hv);
    }
    supportsExternalReferenceType(ert) {
        return this.#externalReferenceTypes.has(ert);
    }
    get supportsDependencyGraph() {
        return this.#supportsDependencyGraph;
    }
    get supportsToolReferences() {
        return this.#supportsToolReferences;
    }
    get requiresComponentVersion() {
        return this.#requiresComponentVersion;
    }
    supportsProperties() {
        return this.#supportsProperties;
    }
    get supportsVulnerabilities() {
        return this.#supportsVulnerabilities;
    }
    supportsVulnerabilityRatingMethod(rm) {
        return this.#vulnerabilityRatingMethods.has(rm);
    }
    get supportsComponentEvidence() {
        return this.#supportsComponentEvidence;
    }
    get supportsMetadataLifecycles() {
        return this.#supportsMetadataLifecycles;
    }
    get supportsMetadataLicenses() {
        return this.#supportsMetadataLicenses;
    }
    get supportsMetadataProperties() {
        return this.#supportsMetadataProperties;
    }
    get supportsExternalReferenceHashes() {
        return this.#supportsExternalReferenceHashes;
    }
    get supportsLicenseAcknowledgement() {
        return this.#supportsLicenseAcknowledgement;
    }
    get supportsServices() {
        return this.#supportsServices;
    }
    get supportsToolsComponentsServices() {
        return this.#supportsToolsComponentsServices;
    }
}
exports._Spec = _Spec;


/***/ }),

/***/ "./src/spec/consts.ts":
/*!****************************!*\
  !*** ./src/spec/consts.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SpecVersionDict = exports.Spec1dot6 = exports.Spec1dot5 = exports.Spec1dot4 = exports.Spec1dot3 = exports.Spec1dot2 = void 0;
const componentType_1 = __webpack_require__(/*! ../enums/componentType */ "./src/enums/componentType.ts");
const externalReferenceType_1 = __webpack_require__(/*! ../enums/externalReferenceType */ "./src/enums/externalReferenceType.ts");
const hashAlogorithm_1 = __webpack_require__(/*! ../enums/hashAlogorithm */ "./src/enums/hashAlogorithm.ts");
const ratingMethod_1 = __webpack_require__(/*! ../enums/vulnerability/ratingMethod */ "./src/enums/vulnerability/ratingMethod.ts");
const _protocol_1 = __webpack_require__(/*! ./_protocol */ "./src/spec/_protocol.ts");
const enums_1 = __webpack_require__(/*! ./enums */ "./src/spec/enums.ts");
exports.Spec1dot2 = Object.freeze(new _protocol_1._Spec(enums_1.Version.v1dot2, [
    enums_1.Format.XML,
    enums_1.Format.JSON
], [
    componentType_1.ComponentType.Application,
    componentType_1.ComponentType.Framework,
    componentType_1.ComponentType.Library,
    componentType_1.ComponentType.Container,
    componentType_1.ComponentType.OperatingSystem,
    componentType_1.ComponentType.Device,
    componentType_1.ComponentType.Firmware,
    componentType_1.ComponentType.File
], [
    hashAlogorithm_1.HashAlgorithm.MD5,
    hashAlogorithm_1.HashAlgorithm['SHA-1'],
    hashAlogorithm_1.HashAlgorithm['SHA-256'],
    hashAlogorithm_1.HashAlgorithm['SHA-384'],
    hashAlogorithm_1.HashAlgorithm['SHA-512'],
    hashAlogorithm_1.HashAlgorithm['SHA3-256'],
    hashAlogorithm_1.HashAlgorithm['SHA3-384'],
    hashAlogorithm_1.HashAlgorithm['SHA3-512'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-256'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-384'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-512'],
    hashAlogorithm_1.HashAlgorithm.BLAKE3
], /^([a-fA-F0-9]{32})$|^([a-fA-F0-9]{40})$|^([a-fA-F0-9]{64})$|^([a-fA-F0-9]{96})$|^([a-fA-F0-9]{128})$/, [
    externalReferenceType_1.ExternalReferenceType.VCS,
    externalReferenceType_1.ExternalReferenceType.IssueTracker,
    externalReferenceType_1.ExternalReferenceType.Website,
    externalReferenceType_1.ExternalReferenceType.Advisories,
    externalReferenceType_1.ExternalReferenceType.BOM,
    externalReferenceType_1.ExternalReferenceType.MailingList,
    externalReferenceType_1.ExternalReferenceType.Social,
    externalReferenceType_1.ExternalReferenceType.Chat,
    externalReferenceType_1.ExternalReferenceType.Documentation,
    externalReferenceType_1.ExternalReferenceType.Support,
    externalReferenceType_1.ExternalReferenceType.Distribution,
    externalReferenceType_1.ExternalReferenceType.License,
    externalReferenceType_1.ExternalReferenceType.BuildMeta,
    externalReferenceType_1.ExternalReferenceType.BuildSystem,
    externalReferenceType_1.ExternalReferenceType.Other
], true, false, true, false, false, [], false, false, false, false, false, false, true, false));
exports.Spec1dot3 = Object.freeze(new _protocol_1._Spec(enums_1.Version.v1dot3, [
    enums_1.Format.XML,
    enums_1.Format.JSON
], [
    componentType_1.ComponentType.Application,
    componentType_1.ComponentType.Framework,
    componentType_1.ComponentType.Library,
    componentType_1.ComponentType.Container,
    componentType_1.ComponentType.OperatingSystem,
    componentType_1.ComponentType.Device,
    componentType_1.ComponentType.Firmware,
    componentType_1.ComponentType.File
], [
    hashAlogorithm_1.HashAlgorithm.MD5,
    hashAlogorithm_1.HashAlgorithm['SHA-1'],
    hashAlogorithm_1.HashAlgorithm['SHA-256'],
    hashAlogorithm_1.HashAlgorithm['SHA-384'],
    hashAlogorithm_1.HashAlgorithm['SHA-512'],
    hashAlogorithm_1.HashAlgorithm['SHA3-256'],
    hashAlogorithm_1.HashAlgorithm['SHA3-384'],
    hashAlogorithm_1.HashAlgorithm['SHA3-512'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-256'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-384'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-512'],
    hashAlogorithm_1.HashAlgorithm.BLAKE3
], /^([a-fA-F0-9]{32})$|^([a-fA-F0-9]{40})$|^([a-fA-F0-9]{64})$|^([a-fA-F0-9]{96})$|^([a-fA-F0-9]{128})$/, [
    externalReferenceType_1.ExternalReferenceType.VCS,
    externalReferenceType_1.ExternalReferenceType.IssueTracker,
    externalReferenceType_1.ExternalReferenceType.Website,
    externalReferenceType_1.ExternalReferenceType.Advisories,
    externalReferenceType_1.ExternalReferenceType.BOM,
    externalReferenceType_1.ExternalReferenceType.MailingList,
    externalReferenceType_1.ExternalReferenceType.Social,
    externalReferenceType_1.ExternalReferenceType.Chat,
    externalReferenceType_1.ExternalReferenceType.Documentation,
    externalReferenceType_1.ExternalReferenceType.Support,
    externalReferenceType_1.ExternalReferenceType.Distribution,
    externalReferenceType_1.ExternalReferenceType.License,
    externalReferenceType_1.ExternalReferenceType.BuildMeta,
    externalReferenceType_1.ExternalReferenceType.BuildSystem,
    externalReferenceType_1.ExternalReferenceType.Other
], true, false, true, true, false, [], true, false, true, true, true, false, true, false));
exports.Spec1dot4 = Object.freeze(new _protocol_1._Spec(enums_1.Version.v1dot4, [
    enums_1.Format.XML,
    enums_1.Format.JSON
], [
    componentType_1.ComponentType.Application,
    componentType_1.ComponentType.Framework,
    componentType_1.ComponentType.Library,
    componentType_1.ComponentType.Container,
    componentType_1.ComponentType.OperatingSystem,
    componentType_1.ComponentType.Device,
    componentType_1.ComponentType.Firmware,
    componentType_1.ComponentType.File
], [
    hashAlogorithm_1.HashAlgorithm.MD5,
    hashAlogorithm_1.HashAlgorithm['SHA-1'],
    hashAlogorithm_1.HashAlgorithm['SHA-256'],
    hashAlogorithm_1.HashAlgorithm['SHA-384'],
    hashAlogorithm_1.HashAlgorithm['SHA-512'],
    hashAlogorithm_1.HashAlgorithm['SHA3-256'],
    hashAlogorithm_1.HashAlgorithm['SHA3-384'],
    hashAlogorithm_1.HashAlgorithm['SHA3-512'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-256'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-384'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-512'],
    hashAlogorithm_1.HashAlgorithm.BLAKE3
], /^([a-fA-F0-9]{32})$|^([a-fA-F0-9]{40})$|^([a-fA-F0-9]{64})$|^([a-fA-F0-9]{96})$|^([a-fA-F0-9]{128})$/, [
    externalReferenceType_1.ExternalReferenceType.VCS,
    externalReferenceType_1.ExternalReferenceType.IssueTracker,
    externalReferenceType_1.ExternalReferenceType.Website,
    externalReferenceType_1.ExternalReferenceType.Advisories,
    externalReferenceType_1.ExternalReferenceType.BOM,
    externalReferenceType_1.ExternalReferenceType.MailingList,
    externalReferenceType_1.ExternalReferenceType.Social,
    externalReferenceType_1.ExternalReferenceType.Chat,
    externalReferenceType_1.ExternalReferenceType.Documentation,
    externalReferenceType_1.ExternalReferenceType.Support,
    externalReferenceType_1.ExternalReferenceType.Distribution,
    externalReferenceType_1.ExternalReferenceType.License,
    externalReferenceType_1.ExternalReferenceType.BuildMeta,
    externalReferenceType_1.ExternalReferenceType.BuildSystem,
    externalReferenceType_1.ExternalReferenceType.ReleaseNotes,
    externalReferenceType_1.ExternalReferenceType.Other
], true, true, false, true, true, [
    ratingMethod_1.RatingMethod.CVSSv2,
    ratingMethod_1.RatingMethod.CVSSv3,
    ratingMethod_1.RatingMethod.CVSSv31,
    ratingMethod_1.RatingMethod.OWASP,
    ratingMethod_1.RatingMethod.Other
], true, false, true, true, true, false, true, false));
exports.Spec1dot5 = Object.freeze(new _protocol_1._Spec(enums_1.Version.v1dot5, [
    enums_1.Format.XML,
    enums_1.Format.JSON
], [
    componentType_1.ComponentType.Application,
    componentType_1.ComponentType.Framework,
    componentType_1.ComponentType.Library,
    componentType_1.ComponentType.Container,
    componentType_1.ComponentType.Platform,
    componentType_1.ComponentType.OperatingSystem,
    componentType_1.ComponentType.Device,
    componentType_1.ComponentType.DeviceDriver,
    componentType_1.ComponentType.Firmware,
    componentType_1.ComponentType.File,
    componentType_1.ComponentType.MachineLearningModel,
    componentType_1.ComponentType.Data
], [
    hashAlogorithm_1.HashAlgorithm.MD5,
    hashAlogorithm_1.HashAlgorithm['SHA-1'],
    hashAlogorithm_1.HashAlgorithm['SHA-256'],
    hashAlogorithm_1.HashAlgorithm['SHA-384'],
    hashAlogorithm_1.HashAlgorithm['SHA-512'],
    hashAlogorithm_1.HashAlgorithm['SHA3-256'],
    hashAlogorithm_1.HashAlgorithm['SHA3-384'],
    hashAlogorithm_1.HashAlgorithm['SHA3-512'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-256'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-384'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-512'],
    hashAlogorithm_1.HashAlgorithm.BLAKE3
], /^([a-fA-F0-9]{32})$|^([a-fA-F0-9]{40})$|^([a-fA-F0-9]{64})$|^([a-fA-F0-9]{96})$|^([a-fA-F0-9]{128})$/, [
    externalReferenceType_1.ExternalReferenceType.VCS,
    externalReferenceType_1.ExternalReferenceType.IssueTracker,
    externalReferenceType_1.ExternalReferenceType.Website,
    externalReferenceType_1.ExternalReferenceType.Advisories,
    externalReferenceType_1.ExternalReferenceType.BOM,
    externalReferenceType_1.ExternalReferenceType.MailingList,
    externalReferenceType_1.ExternalReferenceType.Social,
    externalReferenceType_1.ExternalReferenceType.Chat,
    externalReferenceType_1.ExternalReferenceType.Documentation,
    externalReferenceType_1.ExternalReferenceType.Support,
    externalReferenceType_1.ExternalReferenceType.Distribution,
    externalReferenceType_1.ExternalReferenceType.DistributionIntake,
    externalReferenceType_1.ExternalReferenceType.License,
    externalReferenceType_1.ExternalReferenceType.BuildMeta,
    externalReferenceType_1.ExternalReferenceType.BuildSystem,
    externalReferenceType_1.ExternalReferenceType.ReleaseNotes,
    externalReferenceType_1.ExternalReferenceType.SecurityContact,
    externalReferenceType_1.ExternalReferenceType.ModelCard,
    externalReferenceType_1.ExternalReferenceType.Log,
    externalReferenceType_1.ExternalReferenceType.Configuration,
    externalReferenceType_1.ExternalReferenceType.Evidence,
    externalReferenceType_1.ExternalReferenceType.Formulation,
    externalReferenceType_1.ExternalReferenceType.Attestation,
    externalReferenceType_1.ExternalReferenceType.ThreatModel,
    externalReferenceType_1.ExternalReferenceType.AdversaryModel,
    externalReferenceType_1.ExternalReferenceType.RiskAssessment,
    externalReferenceType_1.ExternalReferenceType.VulnerabilityAssertion,
    externalReferenceType_1.ExternalReferenceType.ExploitabilityStatement,
    externalReferenceType_1.ExternalReferenceType.PentestReport,
    externalReferenceType_1.ExternalReferenceType.StaticAnalysisReport,
    externalReferenceType_1.ExternalReferenceType.DynamicAnalysisReport,
    externalReferenceType_1.ExternalReferenceType.RuntimeAnalysisReport,
    externalReferenceType_1.ExternalReferenceType.ComponentAnalysisReport,
    externalReferenceType_1.ExternalReferenceType.MaturityReport,
    externalReferenceType_1.ExternalReferenceType.CertificationReport,
    externalReferenceType_1.ExternalReferenceType.CodifiedInfrastructure,
    externalReferenceType_1.ExternalReferenceType.QualityMetrics,
    externalReferenceType_1.ExternalReferenceType.POAM,
    externalReferenceType_1.ExternalReferenceType.Other
], true, true, false, true, true, [
    ratingMethod_1.RatingMethod.CVSSv2,
    ratingMethod_1.RatingMethod.CVSSv3,
    ratingMethod_1.RatingMethod.CVSSv31,
    ratingMethod_1.RatingMethod.CVSSv4,
    ratingMethod_1.RatingMethod.OWASP,
    ratingMethod_1.RatingMethod.SSVC,
    ratingMethod_1.RatingMethod.Other
], true, true, true, true, true, false, true, true));
exports.Spec1dot6 = Object.freeze(new _protocol_1._Spec(enums_1.Version.v1dot6, [
    enums_1.Format.XML,
    enums_1.Format.JSON
], [
    componentType_1.ComponentType.Application,
    componentType_1.ComponentType.Framework,
    componentType_1.ComponentType.Library,
    componentType_1.ComponentType.Container,
    componentType_1.ComponentType.Platform,
    componentType_1.ComponentType.OperatingSystem,
    componentType_1.ComponentType.Device,
    componentType_1.ComponentType.DeviceDriver,
    componentType_1.ComponentType.Firmware,
    componentType_1.ComponentType.File,
    componentType_1.ComponentType.MachineLearningModel,
    componentType_1.ComponentType.Data,
    componentType_1.ComponentType.CryptographicAsset
], [
    hashAlogorithm_1.HashAlgorithm.MD5,
    hashAlogorithm_1.HashAlgorithm['SHA-1'],
    hashAlogorithm_1.HashAlgorithm['SHA-256'],
    hashAlogorithm_1.HashAlgorithm['SHA-384'],
    hashAlogorithm_1.HashAlgorithm['SHA-512'],
    hashAlogorithm_1.HashAlgorithm['SHA3-256'],
    hashAlogorithm_1.HashAlgorithm['SHA3-384'],
    hashAlogorithm_1.HashAlgorithm['SHA3-512'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-256'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-384'],
    hashAlogorithm_1.HashAlgorithm['BLAKE2b-512'],
    hashAlogorithm_1.HashAlgorithm.BLAKE3
], /^([a-fA-F0-9]{32})$|^([a-fA-F0-9]{40})$|^([a-fA-F0-9]{64})$|^([a-fA-F0-9]{96})$|^([a-fA-F0-9]{128})$/, [
    externalReferenceType_1.ExternalReferenceType.VCS,
    externalReferenceType_1.ExternalReferenceType.IssueTracker,
    externalReferenceType_1.ExternalReferenceType.Website,
    externalReferenceType_1.ExternalReferenceType.Advisories,
    externalReferenceType_1.ExternalReferenceType.BOM,
    externalReferenceType_1.ExternalReferenceType.MailingList,
    externalReferenceType_1.ExternalReferenceType.Social,
    externalReferenceType_1.ExternalReferenceType.Chat,
    externalReferenceType_1.ExternalReferenceType.Documentation,
    externalReferenceType_1.ExternalReferenceType.Support,
    externalReferenceType_1.ExternalReferenceType.SourceDistribution,
    externalReferenceType_1.ExternalReferenceType.Distribution,
    externalReferenceType_1.ExternalReferenceType.DistributionIntake,
    externalReferenceType_1.ExternalReferenceType.License,
    externalReferenceType_1.ExternalReferenceType.BuildMeta,
    externalReferenceType_1.ExternalReferenceType.BuildSystem,
    externalReferenceType_1.ExternalReferenceType.ReleaseNotes,
    externalReferenceType_1.ExternalReferenceType.SecurityContact,
    externalReferenceType_1.ExternalReferenceType.ModelCard,
    externalReferenceType_1.ExternalReferenceType.Log,
    externalReferenceType_1.ExternalReferenceType.Configuration,
    externalReferenceType_1.ExternalReferenceType.Evidence,
    externalReferenceType_1.ExternalReferenceType.Formulation,
    externalReferenceType_1.ExternalReferenceType.Attestation,
    externalReferenceType_1.ExternalReferenceType.ThreatModel,
    externalReferenceType_1.ExternalReferenceType.AdversaryModel,
    externalReferenceType_1.ExternalReferenceType.RiskAssessment,
    externalReferenceType_1.ExternalReferenceType.VulnerabilityAssertion,
    externalReferenceType_1.ExternalReferenceType.ExploitabilityStatement,
    externalReferenceType_1.ExternalReferenceType.PentestReport,
    externalReferenceType_1.ExternalReferenceType.StaticAnalysisReport,
    externalReferenceType_1.ExternalReferenceType.DynamicAnalysisReport,
    externalReferenceType_1.ExternalReferenceType.RuntimeAnalysisReport,
    externalReferenceType_1.ExternalReferenceType.ComponentAnalysisReport,
    externalReferenceType_1.ExternalReferenceType.MaturityReport,
    externalReferenceType_1.ExternalReferenceType.CertificationReport,
    externalReferenceType_1.ExternalReferenceType.CodifiedInfrastructure,
    externalReferenceType_1.ExternalReferenceType.QualityMetrics,
    externalReferenceType_1.ExternalReferenceType.POAM,
    externalReferenceType_1.ExternalReferenceType.ElectronicSignature,
    externalReferenceType_1.ExternalReferenceType.DigitalSignature,
    externalReferenceType_1.ExternalReferenceType.RFC9116,
    externalReferenceType_1.ExternalReferenceType.Other
], true, true, false, true, true, [
    ratingMethod_1.RatingMethod.CVSSv2,
    ratingMethod_1.RatingMethod.CVSSv3,
    ratingMethod_1.RatingMethod.CVSSv31,
    ratingMethod_1.RatingMethod.CVSSv4,
    ratingMethod_1.RatingMethod.OWASP,
    ratingMethod_1.RatingMethod.SSVC,
    ratingMethod_1.RatingMethod.Other
], true, true, true, true, true, true, true, true));
exports.SpecVersionDict = Object.freeze({
    [enums_1.Version.v1dot6]: exports.Spec1dot6,
    [enums_1.Version.v1dot5]: exports.Spec1dot5,
    [enums_1.Version.v1dot4]: exports.Spec1dot4,
    [enums_1.Version.v1dot3]: exports.Spec1dot3,
    [enums_1.Version.v1dot2]: exports.Spec1dot2
});


/***/ }),

/***/ "./src/spec/enums.ts":
/*!***************************!*\
  !*** ./src/spec/enums.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Format = exports.Version = void 0;
var Version;
(function (Version) {
    Version["v1dot6"] = "1.6";
    Version["v1dot5"] = "1.5";
    Version["v1dot4"] = "1.4";
    Version["v1dot3"] = "1.3";
    Version["v1dot2"] = "1.2";
    Version["v1dot1"] = "1.1";
    Version["v1dot0"] = "1.0";
})(Version || (exports.Version = Version = {}));
var Format;
(function (Format) {
    Format["XML"] = "xml";
    Format["JSON"] = "json";
})(Format || (exports.Format = Format = {}));


/***/ }),

/***/ "./src/spec/errors.ts":
/*!****************************!*\
  !*** ./src/spec/errors.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UnsupportedFormatError = void 0;
class UnsupportedFormatError extends Error {
}
exports.UnsupportedFormatError = UnsupportedFormatError;


/***/ }),

/***/ "./src/spec/index.ts":
/*!***************************!*\
  !*** ./src/spec/index.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./consts */ "./src/spec/consts.ts"), exports);
__exportStar(__webpack_require__(/*! ./enums */ "./src/spec/enums.ts"), exports);
__exportStar(__webpack_require__(/*! ./errors */ "./src/spec/errors.ts"), exports);


/***/ }),

/***/ "./src/types/cpe.ts":
/*!**************************!*\
  !*** ./src/types/cpe.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isCPE = isCPE;
const cpePattern = /^([c][pP][eE]:\/[AHOaho]?(:[A-Za-z0-9\._\-~%]*){0,6})$|^(cpe:2\.3:[aho\*\-](:(((\?*|\*?)([a-zA-Z0-9\-\._]|(\\[\\\*\?!"#$$%&'\(\)\+,\/:;<=>@\[\]\^`\{\|}~]))+(\?*|\*?))|[\*\-])){5}(:(([a-zA-Z]{2,3}(-([a-zA-Z]{2}|[0-9]{3}))?)|[\*\-]))(:(((\?*|\*?)([a-zA-Z0-9\-\._]|(\\[\\\*\?!"#$$%&'\(\)\+,\/:;<=>@\[\]\^`\{\|}~]))+(\?*|\*?))|[\*\-])){4})$/;
function isCPE(value) {
    return typeof value === 'string' &&
        cpePattern.test(value);
}


/***/ }),

/***/ "./src/types/cwe.ts":
/*!**************************!*\
  !*** ./src/types/cwe.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CweRepository = void 0;
exports.isCWE = isCWE;
const sortable_1 = __webpack_require__(/*! ../_helpers/sortable */ "./src/_helpers/sortable.ts");
const integer_1 = __webpack_require__(/*! ./integer */ "./src/types/integer.ts");
function isCWE(value) {
    return (0, integer_1.isPositiveInteger)(value);
}
class CweRepository extends sortable_1.SortableNumbers {
}
exports.CweRepository = CweRepository;


/***/ }),

/***/ "./src/types/index.ts":
/*!****************************!*\
  !*** ./src/types/index.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./cpe */ "./src/types/cpe.ts"), exports);
__exportStar(__webpack_require__(/*! ./cwe */ "./src/types/cwe.ts"), exports);
__exportStar(__webpack_require__(/*! ./integer */ "./src/types/integer.ts"), exports);
__exportStar(__webpack_require__(/*! ./mimeType */ "./src/types/mimeType.ts"), exports);
__exportStar(__webpack_require__(/*! ./nodePackageJson */ "./src/types/nodePackageJson.ts"), exports);


/***/ }),

/***/ "./src/types/integer.ts":
/*!******************************!*\
  !*** ./src/types/integer.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isInteger = isInteger;
exports.isNonNegativeInteger = isNonNegativeInteger;
exports.isPositiveInteger = isPositiveInteger;
function isInteger(value) {
    return Number.isInteger(value);
}
function isNonNegativeInteger(value) {
    return isInteger(value) &&
        value >= 0;
}
function isPositiveInteger(value) {
    return isInteger(value) &&
        value > 0;
}


/***/ }),

/***/ "./src/types/mimeType.ts":
/*!*******************************!*\
  !*** ./src/types/mimeType.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isMimeType = isMimeType;
const mimeTypePattern = /^[-+a-z0-9.]+\/[-+a-z0-9.]+$/;
function isMimeType(value) {
    return typeof value === 'string' &&
        mimeTypePattern.test(value);
}


/***/ }),

/***/ "./src/types/nodePackageJson.ts":
/*!**************************************!*\
  !*** ./src/types/nodePackageJson.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isNodePackageJson = isNodePackageJson;
exports.assertNodePackageJson = assertNodePackageJson;
function isNodePackageJson(value) {
    throw new Error('Not implemented');
}
function assertNodePackageJson(value) {
    throw new Error('Not implemented');
}


/***/ }),

/***/ "./src/utils/bomUtility.ts":
/*!*********************************!*\
  !*** ./src/utils/bomUtility.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.randomSerialNumber = randomSerialNumber;
function randomSerialNumber() {
    const b = [
        Math.round(Math.random() * 0xFFFF),
        Math.round(Math.random() * 0xFFFF),
        Math.round(Math.random() * 0xFFFF),
        Math.round(Math.random() * 0x0FFF) | 0x4000,
        Math.round(Math.random() * 0x3FFF) | 0x8000,
        Math.round(Math.random() * 0xFFFF),
        Math.round(Math.random() * 0xFFFF),
        Math.round(Math.random() * 0xFFFF)
    ].map(n => n.toString(16).padStart(4, '0'));
    return `urn:uuid:${b[0]}${b[1]}-${b[2]}-${b[3]}-${b[4]}-${b[5]}${b[6]}${b[7]}`;
}


/***/ }),

/***/ "./src/utils/index.common.ts":
/*!***********************************!*\
  !*** ./src/utils/index.common.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BomUtility = void 0;
exports.BomUtility = __importStar(__webpack_require__(/*! ./bomUtility */ "./src/utils/bomUtility.ts"));


/***/ }),

/***/ "./src/utils/index.web.ts":
/*!********************************!*\
  !*** ./src/utils/index.web.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./index.common */ "./src/utils/index.common.ts"), exports);


/***/ }),

/***/ "./src/validation/errors.ts":
/*!**********************************!*\
  !*** ./src/validation/errors.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MissingOptionalDependencyError = exports.NotImplementedError = void 0;
const errors_1 = __webpack_require__(/*! ../_optPlug.node/errors */ "./src/_optPlug.node/errors.ts");
class NotImplementedError extends Error {
    constructor(version) {
        super(`not implemented for CycloneDX version: ${version}`);
    }
}
exports.NotImplementedError = NotImplementedError;
class MissingOptionalDependencyError extends errors_1.OptPlugError {
}
exports.MissingOptionalDependencyError = MissingOptionalDependencyError;


/***/ }),

/***/ "./src/validation/index.common.ts":
/*!****************************************!*\
  !*** ./src/validation/index.common.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Types = void 0;
__exportStar(__webpack_require__(/*! ./errors */ "./src/validation/errors.ts"), exports);
exports.Types = __importStar(__webpack_require__(/*! ./types */ "./src/validation/types.ts"));


/***/ }),

/***/ "./src/validation/index.web.ts":
/*!*************************************!*\
  !*** ./src/validation/index.web.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./index.common */ "./src/validation/index.common.ts"), exports);


/***/ }),

/***/ "./src/validation/types.ts":
/*!*********************************!*\
  !*** ./src/validation/types.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {


/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "packageurl-js":
/*!********************************!*\
  !*** external "packageurl-js" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("packageurl-js");

/***/ }),

/***/ "spdx-expression-parse":
/*!****************************************!*\
  !*** external "spdx-expression-parse" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("spdx-expression-parse");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.web.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=lib.dev.js.map